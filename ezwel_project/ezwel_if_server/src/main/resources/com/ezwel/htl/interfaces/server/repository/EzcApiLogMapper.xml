<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezwel.htl.interfaces.server.repository.EzcApiLogMapper">
<!--
 * History : SQL Mapper Generated By iCodeManager Made by API Team KSW
 *
 * 버전          성명                   일자              		변경내용
 * =======       ================       ===================		=================
 * 0.0.1         CodeSkeleton (ksw)     2018-12-03 14:47:40 	신규작성 
 * 
 * @since 2018-12-03 14:47:40
 * @version 0.0.1
 * @author ksw
 * @see "DBIO Mapper"
 * -->
<insert id="insertEzcApiLog" parameterType="ezcApiLog">
INSERT INTO EZC_API_LOG(	/* API 로그 */
	 API_LOG_SEQ	/* API 로그 일련번호, NUMBER(0,22) */
	,API_TYPE	/* API 유형, VARCHAR2(8) */
	,API_RESPON_DIV	/* API 응답 구분, VARCHAR2(8) */
	,AGENT_TYPE	/* 에이전트 유형, VARCHAR2(8) */
	,LOG_DT	/* 로그 일시, VARCHAR2(14) */
	,ERR_YN	/* 오류 여부, CHAR(1) */
	,ERR_MSG	/* 오류 메시지, VARCHAR2(4000) */
	,REQ_TXT	/* REQ TXT, VARCHAR2(4000) */
	,RES_TXT	/* RES TXT, VARCHAR2(4000) */
	,REG_ID	/* 등록자 ID, VARCHAR2(20) */
	,REG_DT	/* 등록 일시, VARCHAR2(14) */
) VALUES (
	 #{apiLogSeq, jdbcType=DECIMAL}
	,#{apiType, jdbcType=VARCHAR}
	,#{apiResponDiv, jdbcType=VARCHAR}
	,#{agentType, jdbcType=VARCHAR}
	,#{logDt, jdbcType=VARCHAR}
	,#{errYn, jdbcType=CHAR}
	,#{errMsg, jdbcType=VARCHAR}
	,#{reqTxt, jdbcType=VARCHAR}
	,#{resTxt, jdbcType=VARCHAR}
	,#{regId, jdbcType=VARCHAR}
	,#{regDt, jdbcType=VARCHAR}
)
</insert>

<select id="selectEzcApiLog" parameterType="ezcApiLog" resultType="ezcApiLog">
SELECT
	 EZC_API_LOG.API_LOG_SEQ AS apiLogSeq	/* API 로그 일련번호, NUMBER(0,22) */
	,EZC_API_LOG.API_TYPE AS apiType	/* API 유형, VARCHAR2(8) */
	,EZC_API_LOG.API_RESPON_DIV AS apiResponDiv	/* API 응답 구분, VARCHAR2(8) */
	,EZC_API_LOG.AGENT_TYPE AS agentType	/* 에이전트 유형, VARCHAR2(8) */
	,EZC_API_LOG.LOG_DT AS logDt	/* 로그 일시, VARCHAR2(14) */
	,EZC_API_LOG.ERR_YN AS errYn	/* 오류 여부, CHAR(1) */
	,EZC_API_LOG.ERR_MSG AS errMsg	/* 오류 메시지, VARCHAR2(4000) */
	,EZC_API_LOG.REQ_TXT AS reqTxt	/* REQ TXT, VARCHAR2(4000) */
	,EZC_API_LOG.RES_TXT AS resTxt	/* RES TXT, VARCHAR2(4000) */
	,EZC_API_LOG.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
	,EZC_API_LOG.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
	,EZC_API_LOG.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
	,EZC_API_LOG.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
FROM
	EZC_API_LOG	/* API 로그 */
WHERE 1=1
	<if test="errYn != null and errYn != ''">
	AND EZC_API_LOG.ERR_YN = #{errYn, jdbcType=CHAR}	/* 오류 여부, CHAR(1) */
	</if>
	AND EZC_API_LOG.API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22), EZC_API_LOG_PK(P),SYS_C0011151(C) */
</select>

<select id="selectCountEzcApiLog" parameterType="ezcApiLog" resultType="java.lang.Integer">
SELECT 
	COUNT(1)
FROM
	EZC_API_LOG	/* API 로그 */
WHERE 1=1
	<if test="errYn != null and errYn != ''">
	AND EZC_API_LOG.ERR_YN = #{errYn, jdbcType=CHAR}	/* 오류 여부, CHAR(1) */
	</if>
	<if test="apiLogSeq != null and apiLogSeq gt 0">
	AND EZC_API_LOG.API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22) */
	</if>
	<if test="apiType != null and apiType != ''">
	AND EZC_API_LOG.API_TYPE = #{apiType, jdbcType=VARCHAR}	/* API 유형, VARCHAR2(8) */
	</if>
	<if test="apiResponDiv != null and apiResponDiv != ''">
	AND EZC_API_LOG.API_RESPON_DIV = #{apiResponDiv, jdbcType=VARCHAR}	/* API 응답 구분, VARCHAR2(8) */
	</if>
	<if test="agentType != null and agentType != ''">
	AND EZC_API_LOG.AGENT_TYPE = #{agentType, jdbcType=VARCHAR}	/* 에이전트 유형, VARCHAR2(8) */
	</if>
	<if test="logDt != null and logDt != ''">
	AND EZC_API_LOG.LOG_DT = #{logDt, jdbcType=VARCHAR}	/* 로그 일시, VARCHAR2(14) */
	</if>
	<if test="errMsg != null and errMsg != ''">
	AND EZC_API_LOG.ERR_MSG LIKE '%' || #{errMsg, jdbcType=VARCHAR} || '%'	/* 오류 메시지, VARCHAR2(4000) */
	</if>
	<if test="reqTxt != null and reqTxt != ''">
	AND EZC_API_LOG.REQ_TXT LIKE '%' || #{reqTxt, jdbcType=VARCHAR} || '%'	/* REQ TXT, VARCHAR2(4000) */
	</if>
	<if test="resTxt != null and resTxt != ''">
	AND EZC_API_LOG.RES_TXT LIKE '%' || #{resTxt, jdbcType=VARCHAR} || '%'	/* RES TXT, VARCHAR2(4000) */
	</if>
	<if test="regId != null and regId != ''">
	AND EZC_API_LOG.REG_ID = #{regId, jdbcType=VARCHAR}	/* 등록자 ID, VARCHAR2(20) */
	</if>
	<if test="regDt != null and regDt != ''">
	AND EZC_API_LOG.REG_DT = #{regDt, jdbcType=VARCHAR}	/* 등록 일시, VARCHAR2(14) */
	</if>
	<if test="modiId != null and modiId != ''">
	AND EZC_API_LOG.MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
	</if>
	<if test="modiDt != null and modiDt != ''">
	AND EZC_API_LOG.MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
	</if>
</select>

<select id="selectListEzcApiLog" resultType="ezcApiLog">
SELECT * FROM (
	SELECT ROWNUM AS ROW__NUM, RECORDS.* FROM (
		/* #### SQL Body [[ ################# */
		SELECT
			 EZC_API_LOG.API_LOG_SEQ AS apiLogSeq	/* API 로그 일련번호, NUMBER(0,22) */
			,EZC_API_LOG.API_TYPE AS apiType	/* API 유형, VARCHAR2(8) */
			,EZC_API_LOG.API_RESPON_DIV AS apiResponDiv	/* API 응답 구분, VARCHAR2(8) */
			,EZC_API_LOG.AGENT_TYPE AS agentType	/* 에이전트 유형, VARCHAR2(8) */
			,EZC_API_LOG.LOG_DT AS logDt	/* 로그 일시, VARCHAR2(14) */
			,EZC_API_LOG.ERR_YN AS errYn	/* 오류 여부, CHAR(1) */
			,EZC_API_LOG.ERR_MSG AS errMsg	/* 오류 메시지, VARCHAR2(4000) */
			,EZC_API_LOG.REQ_TXT AS reqTxt	/* REQ TXT, VARCHAR2(4000) */
			,EZC_API_LOG.RES_TXT AS resTxt	/* RES TXT, VARCHAR2(4000) */
			,EZC_API_LOG.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
			,EZC_API_LOG.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
			,EZC_API_LOG.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
			,EZC_API_LOG.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
		FROM
			EZC_API_LOG	/* API 로그 */
		WHERE 1=1
			<if test="errYn != null and errYn != ''">
			AND EZC_API_LOG.ERR_YN = #{errYn, jdbcType=CHAR}	/* 오류 여부, CHAR(1) */
			</if>
			<if test="apiLogSeq != null and apiLogSeq gt 0">
			AND EZC_API_LOG.API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22) */
			</if>
			<if test="apiType != null and apiType != ''">
			AND EZC_API_LOG.API_TYPE = #{apiType, jdbcType=VARCHAR}	/* API 유형, VARCHAR2(8) */
			</if>
			<if test="apiResponDiv != null and apiResponDiv != ''">
			AND EZC_API_LOG.API_RESPON_DIV = #{apiResponDiv, jdbcType=VARCHAR}	/* API 응답 구분, VARCHAR2(8) */
			</if>
			<if test="agentType != null and agentType != ''">
			AND EZC_API_LOG.AGENT_TYPE = #{agentType, jdbcType=VARCHAR}	/* 에이전트 유형, VARCHAR2(8) */
			</if>
			<if test="logDt != null and logDt != ''">
			AND EZC_API_LOG.LOG_DT = #{logDt, jdbcType=VARCHAR}	/* 로그 일시, VARCHAR2(14) */
			</if>
			<if test="errMsg != null and errMsg != ''">
			AND EZC_API_LOG.ERR_MSG LIKE '%' || #{errMsg, jdbcType=VARCHAR} || '%'	/* 오류 메시지, VARCHAR2(4000) */
			</if>
			<if test="reqTxt != null and reqTxt != ''">
			AND EZC_API_LOG.REQ_TXT LIKE '%' || #{reqTxt, jdbcType=VARCHAR} || '%'	/* REQ TXT, VARCHAR2(4000) */
			</if>
			<if test="resTxt != null and resTxt != ''">
			AND EZC_API_LOG.RES_TXT LIKE '%' || #{resTxt, jdbcType=VARCHAR} || '%'	/* RES TXT, VARCHAR2(4000) */
			</if>
			<if test="regId != null and regId != ''">
			AND EZC_API_LOG.REG_ID = #{regId, jdbcType=VARCHAR}	/* 등록자 ID, VARCHAR2(20) */
			</if>
			<if test="regDt != null and regDt != ''">
			AND EZC_API_LOG.REG_DT = #{regDt, jdbcType=VARCHAR}	/* 등록 일시, VARCHAR2(14) */
			</if>
			<if test="modiId != null and modiId != ''">
			AND EZC_API_LOG.MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
			</if>
			<if test="modiDt != null and modiDt != ''">
			AND EZC_API_LOG.MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
			</if>
		ORDER BY
			EZC_API_LOG.API_LOG_SEQ DESC
		/* #### SQL Body ]] ################# */
	) RECORDS
	WHERE ROWNUM &lt;= ((#{pageNum, jdbcType=NUMERIC}*#{pageCount, jdbcType=NUMERIC})+1) 
)
WHERE ROW__NUM &gt; (#{pageNum, jdbcType=NUMERIC}-1)*#{pageCount, jdbcType=NUMERIC}
</select>

<update id="updateEzcApiLog" parameterType="ezcApiLog">
UPDATE EZC_API_LOG SET	/* API 로그 */
	 API_TYPE = #{apiType, jdbcType=VARCHAR}	/* API 유형, VARCHAR2(8) */
	,API_RESPON_DIV = #{apiResponDiv, jdbcType=VARCHAR}	/* API 응답 구분, VARCHAR2(8) */
	,AGENT_TYPE = #{agentType, jdbcType=VARCHAR}	/* 에이전트 유형, VARCHAR2(8) */
	,LOG_DT = #{logDt, jdbcType=VARCHAR}	/* 로그 일시, VARCHAR2(14) */
	,ERR_YN = #{errYn, jdbcType=CHAR}	/* 오류 여부, CHAR(1) */
	,ERR_MSG = #{errMsg, jdbcType=VARCHAR}	/* 오류 메시지, VARCHAR2(4000) */
	,REQ_TXT = #{reqTxt, jdbcType=VARCHAR}	/* REQ TXT, VARCHAR2(4000) */
	,RES_TXT = #{resTxt, jdbcType=VARCHAR}	/* RES TXT, VARCHAR2(4000) */
	,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
	,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
WHERE 1=1
	AND API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22) */
</update>

<update id="mergeEzcApiLog" parameterType="ezcApiLog">
MERGE INTO EZC_API_LOG /* API 로그 */
	USING DUAL ON (
		API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22) */
	)
	WHEN MATCHED THEN
		UPDATE SET
			 API_TYPE = #{apiType, jdbcType=VARCHAR}	/* API 유형, VARCHAR2(8) */
			,API_RESPON_DIV = #{apiResponDiv, jdbcType=VARCHAR}	/* API 응답 구분, VARCHAR2(8) */
			,AGENT_TYPE = #{agentType, jdbcType=VARCHAR}	/* 에이전트 유형, VARCHAR2(8) */
			,LOG_DT = #{logDt, jdbcType=VARCHAR}	/* 로그 일시, VARCHAR2(14) */
			,ERR_YN = #{errYn, jdbcType=CHAR}	/* 오류 여부, CHAR(1) */
			,ERR_MSG = #{errMsg, jdbcType=VARCHAR}	/* 오류 메시지, VARCHAR2(4000) */
			,REQ_TXT = #{reqTxt, jdbcType=VARCHAR}	/* REQ TXT, VARCHAR2(4000) */
			,RES_TXT = #{resTxt, jdbcType=VARCHAR}	/* RES TXT, VARCHAR2(4000) */
			,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
			,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
	WHEN NOT MATCHED THEN
		INSERT (
			 API_LOG_SEQ	/* API 로그 일련번호, NUMBER(0,22) */
			,API_TYPE	/* API 유형, VARCHAR2(8) */
			,API_RESPON_DIV	/* API 응답 구분, VARCHAR2(8) */
			,AGENT_TYPE	/* 에이전트 유형, VARCHAR2(8) */
			,LOG_DT	/* 로그 일시, VARCHAR2(14) */
			,ERR_YN	/* 오류 여부, CHAR(1) */
			,ERR_MSG	/* 오류 메시지, VARCHAR2(4000) */
			,REQ_TXT	/* REQ TXT, VARCHAR2(4000) */
			,RES_TXT	/* RES TXT, VARCHAR2(4000) */
			,REG_ID	/* 등록자 ID, VARCHAR2(20) */
			,REG_DT	/* 등록 일시, VARCHAR2(14) */
		) VALUES (
			 #{apiLogSeq, jdbcType=DECIMAL}
			,#{apiType, jdbcType=VARCHAR}
			,#{apiResponDiv, jdbcType=VARCHAR}
			,#{agentType, jdbcType=VARCHAR}
			,#{logDt, jdbcType=VARCHAR}
			,#{errYn, jdbcType=CHAR}
			,#{errMsg, jdbcType=VARCHAR}
			,#{reqTxt, jdbcType=VARCHAR}
			,#{resTxt, jdbcType=VARCHAR}
			,#{regId, jdbcType=VARCHAR}
			,#{regDt, jdbcType=VARCHAR}
		)
</update>

<delete id="deleteEzcApiLog" parameterType="ezcApiLog">
DELETE FROM EZC_API_LOG /* API 로그 */
WHERE 1=1
	AND API_LOG_SEQ = #{apiLogSeq, jdbcType=DECIMAL}	/* API 로그 일련번호, NUMBER(0,22) */
</delete>


</mapper>
