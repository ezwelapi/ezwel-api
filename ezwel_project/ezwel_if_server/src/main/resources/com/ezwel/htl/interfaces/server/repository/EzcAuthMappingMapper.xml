<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezwel.htl.interfaces.server.repository.EzcAuthMappingMapper">
<!--
 * History : SQL Mapper Generated By iCodeManager Made by API Team KSW
 *
 * 버전          성명                   일자              		변경내용
 * =======       ================       ===================		=================
 * 0.0.1         CodeSkeleton (ksw)     2018-12-03 11:05:01 	신규작성 
 * 
 * @since 2018-12-03 11:05:01
 * @version 0.0.1
 * @author ksw
 * @see "DBIO Mapper"
 * -->
<insert id="insertEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
INSERT INTO EZC_AUTH_MAPPING(	/* 권한 맵핑 */
	 AUTH_GRP_CD	/* 권한 그룹 코드, VARCHAR2(10) */
	,MGR_ID	/* 운영자 ID, VARCHAR2(20) */
	,REG_ID	/* 등록자 ID, VARCHAR2(20) */
	,REG_DT	/* 등록 일시, VARCHAR2(14) */
) VALUES (
	 #{authGrpCd, jdbcType=VARCHAR}
	,#{mgrId, jdbcType=VARCHAR}
	,#{regId, jdbcType=VARCHAR}
	,#{regDt, jdbcType=VARCHAR}
)
</insert>

<select id="selectEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping" resultType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
SELECT
	 EZC_AUTH_MAPPING.AUTH_GRP_CD AS authGrpCd	/* 권한 그룹 코드, VARCHAR2(10) */
	,EZC_AUTH_MAPPING.MGR_ID AS mgrId	/* 운영자 ID, VARCHAR2(20) */
	,EZC_AUTH_MAPPING.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
	,EZC_AUTH_MAPPING.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
FROM
	 EZC_AUTH_MAPPING	/* 권한 맵핑 */
	,EZC_AUTH_GRP	/* 권한 그룹 */
	,EZC_MGR	/* 운영자 정보 */
	,EZC_CLIENT_INFO	/* 고객사 */
	,EZC_PARTNER	/* 제휴사 정보 */
WHERE 1=1
	AND EZC_AUTH_MAPPING.AUTH_GRP_CD = EZC_AUTH_GRP.AUTH_GRP_CD
	AND EZC_AUTH_MAPPING.MGR_ID = EZC_MGR.MGR_ID
	AND EZC_MGR.CLIENT_CD = EZC_CLIENT_INFO.CLIENT_CD
	AND EZC_MGR.PARTNER_CD = EZC_PARTNER.PARTNER_CD
	AND EZC_AUTH_MAPPING.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_AUTH_GRP.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_MGR.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_CLIENT_INFO.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_PARTNER.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_AUTH_MAPPING.AUTH_GRP_CD = #{authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
	AND EZC_AUTH_MAPPING.MGR_ID = #{mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
</select>

<select id="selectCountEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping" resultType="java.lang.Integer">
SELECT 
	COUNT(1)
FROM
	 EZC_AUTH_MAPPING	/* 권한 맵핑 */
	,EZC_AUTH_GRP	/* 권한 그룹 */
	,EZC_MGR	/* 운영자 정보 */
	,EZC_CLIENT_INFO	/* 고객사 */
	,EZC_PARTNER	/* 제휴사 정보 */
WHERE 1=1
	AND EZC_AUTH_MAPPING.AUTH_GRP_CD = EZC_AUTH_GRP.AUTH_GRP_CD
	AND EZC_AUTH_MAPPING.MGR_ID = EZC_MGR.MGR_ID
	AND EZC_MGR.CLIENT_CD = EZC_CLIENT_INFO.CLIENT_CD
	AND EZC_MGR.PARTNER_CD = EZC_PARTNER.PARTNER_CD
	AND EZC_AUTH_MAPPING.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_AUTH_GRP.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_MGR.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_CLIENT_INFO.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	AND EZC_PARTNER.REC_STAT = #{recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
	<if test="authGrpCd != null and authGrpCd != ''">
	AND EZC_AUTH_MAPPING.AUTH_GRP_CD = #{authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
	</if>
	<if test="mgrId != null and mgrId != ''">
	AND EZC_AUTH_MAPPING.MGR_ID = #{mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
	</if>
</select>

<select id="selectListEzcAuthMapping" resultType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
SELECT * FROM (
	SELECT ROWNUM AS ROW__NUM, RECORDS.* FROM (
		/* #### SQL Body [[ ################# */
		SELECT
			 EZC_AUTH_MAPPING.AUTH_GRP_CD AS authGrpCd	/* 권한 그룹 코드, VARCHAR2(10) */
			,EZC_AUTH_MAPPING.MGR_ID AS mgrId	/* 운영자 ID, VARCHAR2(20) */
			,EZC_AUTH_MAPPING.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
			,EZC_AUTH_MAPPING.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
		FROM
			 EZC_AUTH_MAPPING	/* 권한 맵핑 */
			,EZC_AUTH_GRP	/* 권한 그룹 */
			,EZC_MGR	/* 운영자 정보 */
			,EZC_CLIENT_INFO	/* 고객사 */
			,EZC_PARTNER	/* 제휴사 정보 */
		WHERE 1=1
			AND EZC_AUTH_MAPPING.AUTH_GRP_CD = EZC_AUTH_GRP.AUTH_GRP_CD
			AND EZC_AUTH_MAPPING.MGR_ID = EZC_MGR.MGR_ID
			AND EZC_MGR.CLIENT_CD = EZC_CLIENT_INFO.CLIENT_CD
			AND EZC_MGR.PARTNER_CD = EZC_PARTNER.PARTNER_CD
			AND EZC_AUTH_MAPPING.REC_STAT = #{param.recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
			AND EZC_AUTH_GRP.REC_STAT = #{param.recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
			AND EZC_MGR.REC_STAT = #{param.recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
			AND EZC_CLIENT_INFO.REC_STAT = #{param.recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
			AND EZC_PARTNER.REC_STAT = #{param.recStat, jdbcType=CHAR}	/* 레코드 상태, CHAR(1) */
			<if test="param.authGrpCd != null and param.authGrpCd != ''">
			AND EZC_AUTH_MAPPING.AUTH_GRP_CD = #{param.authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
			</if>
			<if test="param.mgrId != null and param.mgrId != ''">
			AND EZC_AUTH_MAPPING.MGR_ID = #{param.mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
			</if>
		ORDER BY
			EZC_AUTH_MAPPING.AUTH_GRP_CD DESC
		/* #### SQL Body ]] ################# */
	) RECORDS
	WHERE ROWNUM &lt;= ((#{param.pageNum, jdbcType=NUMERIC}*#{param.pageCount, jdbcType=NUMERIC})+1) 
)
WHERE ROW__NUM &gt; (#{param.pageNum, jdbcType=NUMERIC}-1)*#{param.pageCount, jdbcType=NUMERIC}
</select>

<update id="updateEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
UPDATE EZC_AUTH_MAPPING SET	/* 권한 맵핑 */
WHERE 1=1
	AND AUTH_GRP_CD = #{authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
	AND MGR_ID = #{mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
</update>

<update id="mergeEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
MERGE INTO EZC_AUTH_MAPPING /* 권한 맵핑 */
	USING DUAL ON (
		AUTH_GRP_CD = #{authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
		AND MGR_ID = #{mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
	)
	WHEN MATCHED THEN
		UPDATE SET
	WHEN NOT MATCHED THEN
		INSERT (
			 AUTH_GRP_CD	/* 권한 그룹 코드, VARCHAR2(10) */
			,MGR_ID	/* 운영자 ID, VARCHAR2(20) */
			,REG_ID	/* 등록자 ID, VARCHAR2(20) */
			,REG_DT	/* 등록 일시, VARCHAR2(14) */
		) VALUES (
			 #{authGrpCd, jdbcType=VARCHAR}
			,#{mgrId, jdbcType=VARCHAR}
			,#{regId, jdbcType=VARCHAR}
			,#{regDt, jdbcType=VARCHAR}
		)
</update>

<delete id="deleteEzcAuthMapping" parameterType="com.ezwel.htl.interfaces.server.entities.EzcAuthMapping">
DELETE FROM EZC_AUTH_MAPPING /* 권한 맵핑 */
WHERE 1=1
	AND AUTH_GRP_CD = #{authGrpCd, jdbcType=VARCHAR}	/* 권한 그룹 코드, VARCHAR2(10) */
	AND MGR_ID = #{mgrId, jdbcType=VARCHAR}	/* 운영자 ID, VARCHAR2(20) */
</delete>


</mapper>
