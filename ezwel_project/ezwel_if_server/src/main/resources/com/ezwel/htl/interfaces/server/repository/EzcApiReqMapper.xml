<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezwel.htl.interfaces.server.repository.EzcApiReqMapper">
<!--
 * History : SQL Mapper Generated By iCodeManager Made by API Team KSW
 *
 * 버전          성명                   일자              		변경내용
 * =======       ================       ===================		=================
 * 0.0.1         iCodeManager     2018-12-03 15:11:01 	신규작성 
 * 
 * @since 2018-12-03 15:11:01
 * @version 0.0.1
 * @author ksw
 * @see "DBIO Mapper"
 * -->
<insert id="insertEzcApiReq" parameterType="ezcApiReq">
INSERT INTO EZC_API_REQ(	/* API 요청 */
	 API_REQ_NUM	/* API 요청 번호, NUMBER(0,22) */
	,API_REQ_NM	/* API 요청 명, VARCHAR2(100) */
	,API_DIV_CD	/* API 구분 코드, VARCHAR2(8) */
	,PARTNER_CD	/* 제휴사 코드, VARCHAR2(20) */
	,LIVE_URL	/* 라이브 URL, VARCHAR2(200) */
	,TEST_URL	/* 테스트 URL, VARCHAR2(200) */
	,TEST_BASE_DATA	/* 테스트 기본 데이터, VARCHAR2(200) */
	,REG_ID	/* 등록자 ID, VARCHAR2(20) */
	,REG_DT	/* 등록 일시, VARCHAR2(14) */
) VALUES (
	 #{apiReqNum, jdbcType=DECIMAL}
	,#{apiReqNm, jdbcType=VARCHAR}
	,#{apiDivCd, jdbcType=VARCHAR}
	,#{partnerCd, jdbcType=VARCHAR}
	,#{liveUrl, jdbcType=VARCHAR}
	,#{testUrl, jdbcType=VARCHAR}
	,#{testBaseData, jdbcType=VARCHAR}
	,#{regId, jdbcType=VARCHAR}
	,#{regDt, jdbcType=VARCHAR}
)
</insert>

<select id="selectEzcApiReq" parameterType="ezcApiReq" resultType="ezcApiReq">
SELECT
	 EZC_API_REQ.API_REQ_NUM AS apiReqNum	/* API 요청 번호, NUMBER(0,22) */
	,EZC_API_REQ.API_REQ_NM AS apiReqNm	/* API 요청 명, VARCHAR2(100) */
	,EZC_API_REQ.API_DIV_CD AS apiDivCd	/* API 구분 코드, VARCHAR2(8) */
	,EZC_API_REQ.PARTNER_CD AS partnerCd	/* 제휴사 코드, VARCHAR2(20) */
	,EZC_API_REQ.LIVE_URL AS liveUrl	/* 라이브 URL, VARCHAR2(200) */
	,EZC_API_REQ.TEST_URL AS testUrl	/* 테스트 URL, VARCHAR2(200) */
	,EZC_API_REQ.TEST_BASE_DATA AS testBaseData	/* 테스트 기본 데이터, VARCHAR2(200) */
	,EZC_API_REQ.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
	,EZC_API_REQ.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
	,EZC_API_REQ.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
	,EZC_API_REQ.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
FROM
	EZC_API_REQ	/* API 요청 */
WHERE 1=1
	AND EZC_API_REQ.API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22), EZC_API_REQ_PK(P),SYS_C0011184(C) */
</select>

<select id="selectCountEzcApiReq" parameterType="ezcApiReq" resultType="java.lang.Integer">
SELECT 
	COUNT(1)
FROM
	EZC_API_REQ	/* API 요청 */
WHERE 1=1
	<if test="apiReqNum != null and apiReqNum gt 0">
	AND EZC_API_REQ.API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22) */
	</if>
	<if test="apiReqNm != null and apiReqNm != ''">
	AND EZC_API_REQ.API_REQ_NM = #{apiReqNm, jdbcType=VARCHAR}	/* API 요청 명, VARCHAR2(100) */
	</if>
	<if test="apiDivCd != null and apiDivCd != ''">
	AND EZC_API_REQ.API_DIV_CD = #{apiDivCd, jdbcType=VARCHAR}	/* API 구분 코드, VARCHAR2(8) */
	</if>
	<if test="partnerCd != null and partnerCd != ''">
	AND EZC_API_REQ.PARTNER_CD = #{partnerCd, jdbcType=VARCHAR}	/* 제휴사 코드, VARCHAR2(20) */
	</if>
	<if test="liveUrl != null and liveUrl != ''">
	AND EZC_API_REQ.LIVE_URL = #{liveUrl, jdbcType=VARCHAR}	/* 라이브 URL, VARCHAR2(200) */
	</if>
	<if test="testUrl != null and testUrl != ''">
	AND EZC_API_REQ.TEST_URL = #{testUrl, jdbcType=VARCHAR}	/* 테스트 URL, VARCHAR2(200) */
	</if>
	<if test="testBaseData != null and testBaseData != ''">
	AND EZC_API_REQ.TEST_BASE_DATA = #{testBaseData, jdbcType=VARCHAR}	/* 테스트 기본 데이터, VARCHAR2(200) */
	</if>
	<if test="regId != null and regId != ''">
	AND EZC_API_REQ.REG_ID = #{regId, jdbcType=VARCHAR}	/* 등록자 ID, VARCHAR2(20) */
	</if>
	<if test="regDt != null and regDt != ''">
	AND EZC_API_REQ.REG_DT = #{regDt, jdbcType=VARCHAR}	/* 등록 일시, VARCHAR2(14) */
	</if>
	<if test="modiId != null and modiId != ''">
	AND EZC_API_REQ.MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
	</if>
	<if test="modiDt != null and modiDt != ''">
	AND EZC_API_REQ.MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
	</if>
</select>

<select id="selectListEzcApiReq" resultType="ezcApiReq">
SELECT * FROM (
	SELECT ROWNUM AS ROW__NUM, RECORDS.* FROM (
		/* #### SQL Body [[ ################# */
		SELECT
			 EZC_API_REQ.API_REQ_NUM AS apiReqNum	/* API 요청 번호, NUMBER(0,22) */
			,EZC_API_REQ.API_REQ_NM AS apiReqNm	/* API 요청 명, VARCHAR2(100) */
			,EZC_API_REQ.API_DIV_CD AS apiDivCd	/* API 구분 코드, VARCHAR2(8) */
			,EZC_API_REQ.PARTNER_CD AS partnerCd	/* 제휴사 코드, VARCHAR2(20) */
			,EZC_API_REQ.LIVE_URL AS liveUrl	/* 라이브 URL, VARCHAR2(200) */
			,EZC_API_REQ.TEST_URL AS testUrl	/* 테스트 URL, VARCHAR2(200) */
			,EZC_API_REQ.TEST_BASE_DATA AS testBaseData	/* 테스트 기본 데이터, VARCHAR2(200) */
			,EZC_API_REQ.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
			,EZC_API_REQ.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
			,EZC_API_REQ.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
			,EZC_API_REQ.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
		FROM
			EZC_API_REQ	/* API 요청 */
		WHERE 1=1
			<if test="apiReqNum != null and apiReqNum gt 0">
			AND EZC_API_REQ.API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22) */
			</if>
			<if test="apiReqNm != null and apiReqNm != ''">
			AND EZC_API_REQ.API_REQ_NM = #{apiReqNm, jdbcType=VARCHAR}	/* API 요청 명, VARCHAR2(100) */
			</if>
			<if test="apiDivCd != null and apiDivCd != ''">
			AND EZC_API_REQ.API_DIV_CD = #{apiDivCd, jdbcType=VARCHAR}	/* API 구분 코드, VARCHAR2(8) */
			</if>
			<if test="partnerCd != null and partnerCd != ''">
			AND EZC_API_REQ.PARTNER_CD = #{partnerCd, jdbcType=VARCHAR}	/* 제휴사 코드, VARCHAR2(20) */
			</if>
			<if test="liveUrl != null and liveUrl != ''">
			AND EZC_API_REQ.LIVE_URL = #{liveUrl, jdbcType=VARCHAR}	/* 라이브 URL, VARCHAR2(200) */
			</if>
			<if test="testUrl != null and testUrl != ''">
			AND EZC_API_REQ.TEST_URL = #{testUrl, jdbcType=VARCHAR}	/* 테스트 URL, VARCHAR2(200) */
			</if>
			<if test="testBaseData != null and testBaseData != ''">
			AND EZC_API_REQ.TEST_BASE_DATA = #{testBaseData, jdbcType=VARCHAR}	/* 테스트 기본 데이터, VARCHAR2(200) */
			</if>
			<if test="regId != null and regId != ''">
			AND EZC_API_REQ.REG_ID = #{regId, jdbcType=VARCHAR}	/* 등록자 ID, VARCHAR2(20) */
			</if>
			<if test="regDt != null and regDt != ''">
			AND EZC_API_REQ.REG_DT = #{regDt, jdbcType=VARCHAR}	/* 등록 일시, VARCHAR2(14) */
			</if>
			<if test="modiId != null and modiId != ''">
			AND EZC_API_REQ.MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
			</if>
			<if test="modiDt != null and modiDt != ''">
			AND EZC_API_REQ.MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
			</if>
		ORDER BY
			EZC_API_REQ.API_REQ_NUM DESC
		/* #### SQL Body ]] ################# */
	) RECORDS
	WHERE ROWNUM &lt;= ((#{pageNum, jdbcType=NUMERIC}*#{pageCount, jdbcType=NUMERIC})+1) 
)
WHERE ROW__NUM &gt; (#{pageNum, jdbcType=NUMERIC}-1)*#{pageCount, jdbcType=NUMERIC}
</select>

<update id="updateEzcApiReq" parameterType="ezcApiReq">
UPDATE EZC_API_REQ SET	/* API 요청 */
	 API_REQ_NM = #{apiReqNm, jdbcType=VARCHAR}	/* API 요청 명, VARCHAR2(100) */
	,API_DIV_CD = #{apiDivCd, jdbcType=VARCHAR}	/* API 구분 코드, VARCHAR2(8) */
	,PARTNER_CD = #{partnerCd, jdbcType=VARCHAR}	/* 제휴사 코드, VARCHAR2(20) */
	,LIVE_URL = #{liveUrl, jdbcType=VARCHAR}	/* 라이브 URL, VARCHAR2(200) */
	,TEST_URL = #{testUrl, jdbcType=VARCHAR}	/* 테스트 URL, VARCHAR2(200) */
	,TEST_BASE_DATA = #{testBaseData, jdbcType=VARCHAR}	/* 테스트 기본 데이터, VARCHAR2(200) */
	,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
	,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
WHERE 1=1
	AND API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22) */
</update>

<update id="mergeEzcApiReq" parameterType="ezcApiReq">
MERGE INTO EZC_API_REQ /* API 요청 */
	USING DUAL ON (
		API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22) */
	)
	WHEN MATCHED THEN
		UPDATE SET
			 API_REQ_NM = #{apiReqNm, jdbcType=VARCHAR}	/* API 요청 명, VARCHAR2(100) */
			,API_DIV_CD = #{apiDivCd, jdbcType=VARCHAR}	/* API 구분 코드, VARCHAR2(8) */
			,PARTNER_CD = #{partnerCd, jdbcType=VARCHAR}	/* 제휴사 코드, VARCHAR2(20) */
			,LIVE_URL = #{liveUrl, jdbcType=VARCHAR}	/* 라이브 URL, VARCHAR2(200) */
			,TEST_URL = #{testUrl, jdbcType=VARCHAR}	/* 테스트 URL, VARCHAR2(200) */
			,TEST_BASE_DATA = #{testBaseData, jdbcType=VARCHAR}	/* 테스트 기본 데이터, VARCHAR2(200) */
			,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
			,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
	WHEN NOT MATCHED THEN
		INSERT (
			 API_REQ_NUM	/* API 요청 번호, NUMBER(0,22) */
			,API_REQ_NM	/* API 요청 명, VARCHAR2(100) */
			,API_DIV_CD	/* API 구분 코드, VARCHAR2(8) */
			,PARTNER_CD	/* 제휴사 코드, VARCHAR2(20) */
			,LIVE_URL	/* 라이브 URL, VARCHAR2(200) */
			,TEST_URL	/* 테스트 URL, VARCHAR2(200) */
			,TEST_BASE_DATA	/* 테스트 기본 데이터, VARCHAR2(200) */
			,REG_ID	/* 등록자 ID, VARCHAR2(20) */
			,REG_DT	/* 등록 일시, VARCHAR2(14) */
		) VALUES (
			 #{apiReqNum, jdbcType=DECIMAL}
			,#{apiReqNm, jdbcType=VARCHAR}
			,#{apiDivCd, jdbcType=VARCHAR}
			,#{partnerCd, jdbcType=VARCHAR}
			,#{liveUrl, jdbcType=VARCHAR}
			,#{testUrl, jdbcType=VARCHAR}
			,#{testBaseData, jdbcType=VARCHAR}
			,#{regId, jdbcType=VARCHAR}
			,#{regDt, jdbcType=VARCHAR}
		)
</update>

<delete id="deleteEzcApiReq" parameterType="ezcApiReq">
DELETE FROM EZC_API_REQ /* API 요청 */
WHERE 1=1
	AND API_REQ_NUM = #{apiReqNum, jdbcType=DECIMAL}	/* API 요청 번호, NUMBER(0,22) */
</delete>


</mapper>
