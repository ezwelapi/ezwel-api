<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezwel.htl.interfaces.server.repository.outsideMapper">

<select id="findRule" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.RuleSearchDTO">
SELECT 
	 RULES200.R19_1 R191
	,RULES200.R20_1 R201
	,RULES200.R30_1 R301
	,RULES200.R20_2 R202
	,RULES200.R20_3 R203
	,RULES200.R20_4 R204
	,RULES200.R20_5 R205
	,RULES200.R20_6 R206
	,RULES200.R20_7 R207
	,RULES200.R20_8 R208
	,RULES200.R20_9 R209
	,RULES200.R20_A R20A
	,RULES200.R20_B R20B
	,RULES200.R20_C R20C
	,RULES200.R20_D R20D
	,RULES200.R20_E R20E
	,RULES200.R20_F R20F
	,RULES200.R20_G R20G
	,RULES200.R20_H R20H
	,RULES200.R20_I R20I
	,RULES200.RELSYS RELSYS
	,RULES200.RELNO RELNO
	,RULES200.UPDATETYPE UPDATETYPE
FROM 
	RULES200
	,( 	SELECT R19_1,R20_1 
		FROM RULES210 
		WHERE 1=1 AND R21_9 != 'D' AND R19_1 = 0
		GROUP BY R19_1,R20_1 
	) RULES210
WHERE 1=1
	AND RULES200.R19_1 = RULES210.R19_1
	AND RULES200.R20_1 = RULES210.R20_1
	AND RULES200.R19_1 = 0 -- FIX HISTORY ID
	AND RULES200.R20_9 != 'D' -- FIX
	<if test='iRuleCodeType == 0'>
	AND RULES200.R20_1 = #{ruleCode} -- 룰 코드 
	</if>
	<if test='iRuleCodeType == 1'>
	AND RULES200.R20_2 = #{ruleCode} -- 룰 이름 
	</if>
	<if test='iRuleCodeType == 2'>
	AND RULES200.R20_F = #{ruleCode} -- 룰 별칭 
	</if>
</select>

<select id="ruleCount" parameterType="com.innorules.component.parameter.SearchParameter" resultType="java.lang.Long">
SELECT 
	 COUNT(1)
FROM 
	RULES200
	,( 	
		SELECT R19_1, R20_1 FROM (
			SELECT 
				R19_1, R20_1 ,CASE MAX(R21_A_NUM) 
					WHEN 3 THEN 'X'
					WHEN 2 THEN 'U'
					WHEN 1 THEN 'O'
				END R21_A
			FROM (
				SELECT 
					R19_1,R20_1 ,CASE R21_A 
						WHEN 'X' THEN 3
						WHEN 'U' THEN 2
						WHEN 'O' THEN 1
					END R21_A_NUM
				FROM RULES210 
				WHERE 1=1 
					AND R21_9 != 'D' 
					AND R19_1 = 0
				GROUP BY 
					R19_1,R20_1, R21_A 
			)
			GROUP BY R19_1,R20_1
		)
		<if test='changeYn != null and changeYn != ""'>
		WHERE R21_A = #{changeYn} -- 변경 여부
		</if>				
	) RULES210
WHERE 1=1
	AND RULES200.R19_1 = RULES210.R19_1
	AND RULES200.R20_1 = RULES210.R20_1
	AND RULES200.R19_1 = 0 -- FIX HISTORY ID
	AND RULES200.R20_9 != 'D' -- FIX
	<if test='searchType != null and searchKey != null and searchKey != ""'>
		<if test='searchType == "ruleName"'> 
		AND RULES200.R20_2 LIKE '%' || #{searchKey} || '%' -- 룰 이름 
		</if>
		<if test='searchType == "ruleId"'>
		AND RULES200.R20_1 LIKE '%' || #{searchKey} || '%' -- 룰 코드 
		</if>
		<if test='searchType == "ruleAlias"'>
		AND RULES200.R20_F LIKE '%' || #{searchKey} || '%' -- 룰 별칭 
		</if>
		<if test='searchType == "ruleDesc"'>
		AND RULES200.R20_6 LIKE '%' || #{searchKey} || '%' -- 룰 설명 
		</if>		 
	</if>
	<if test='ruleTemplates != null'>
	AND RULES200.R20_3 IN  
        <foreach collection="ruleTemplates" item="template" index="index" separator="," open="(" close=")">
            #{template}
        </foreach> -- 룰 템플릿
	</if>
	<if test='ruleType != null and ruleType != ""'>
	AND RULES200.R20_8 = #{ruleType} -- 룰 구분
	</if>
	<if test='branchYn != null and branchYn != ""'>
	AND RULES200.R20_E = #{branchYn}	-- 분기 여부
	</if>
	<if test='approveYn != null and approveYn != ""'>
	AND RULES200.R20_C = #{approveYn} -- 승인 여부
	</if>
</select>

<select id="selectRule" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.RuleSearchDTO">
SELECT
	*
FROM (
	SELECT
		ROWNUM AS RNUM
		,DS.*
	FROM (
		SELECT 
			 RULES200.R19_1 R191
			,RULES200.R20_1 R201
			,RULES200.R30_1 R301
			,RULES200.R20_2 R202
			,RULES200.R20_3 R203
			,RULES200.R20_4 R204
			,RULES200.R20_5 R205
			,RULES200.R20_6 R206
			,RULES200.R20_7 R207
			,RULES200.R20_8 R208
			,RULES200.R20_9 R209
			,RULES200.R20_A R20A
			,RULES200.R20_B R20B
			,RULES200.R20_C R20C
			,RULES200.R20_D R20D
			,RULES200.R20_E R20E
			,RULES200.R20_F R20F
			,RULES200.R20_G R20G
			,RULES200.R20_H R20H
			,RULES200.R20_I R20I
			,RULES200.RELSYS RELSYS
			,RULES200.RELNO RELNO
			,RULES200.UPDATETYPE UPDATETYPE
		FROM 
			RULES200
			,( 	
				SELECT R19_1, R20_1 FROM (
					SELECT 
						R19_1, R20_1 ,CASE MAX(R21_A_NUM) 
							WHEN 3 THEN 'X'
							WHEN 2 THEN 'U'
							WHEN 1 THEN 'O'
						END R21_A
					FROM (
						SELECT 
							R19_1,R20_1 ,CASE R21_A 
								WHEN 'X' THEN 3
								WHEN 'U' THEN 2
								WHEN 'O' THEN 1
							END R21_A_NUM
						FROM RULES210 
						WHERE 1=1 
							AND R21_9 != 'D' 
							AND R19_1 = 0
						GROUP BY 
							R19_1,R20_1, R21_A 
					)
					GROUP BY R19_1,R20_1
				)
				<if test='changeYn != null and changeYn != ""'>
				WHERE R21_A = #{changeYn} -- 변경 여부
				</if>				
			) RULES210
		WHERE 1=1
			AND RULES200.R19_1 = RULES210.R19_1
			AND RULES200.R20_1 = RULES210.R20_1
			AND RULES200.R19_1 = 0 -- FIX HISTORY ID
			AND RULES200.R20_9 != 'D' -- FIX
			<if test='searchType != null and searchKey != null and searchKey != ""'>
				<if test='searchType == "ruleName"'>
				AND RULES200.R20_2 LIKE '%' || #{searchKey} || '%' -- 룰 이름
				</if>
				<if test='searchType == "ruleId"'>
				AND RULES200.R20_1 LIKE '%' || #{searchKey} || '%' -- 룰 코드
				</if>
				<if test='searchType == "ruleAlias"'>
				AND RULES200.R20_F LIKE '%' || #{searchKey} || '%' -- 룰 별칭
				</if>
				<if test='searchType == "ruleDesc"'>
				AND RULES200.R20_6 LIKE '%' || #{searchKey} || '%' -- 룰 설명
				</if>		
			</if>
			<if test='ruleTemplates != null'>
			AND RULES200.R20_3 IN  
		        <foreach collection="ruleTemplates" item="template" index="index" separator="," open="(" close=")">
		            #{template}
		        </foreach> -- 룰 템플릿
			</if>			
			<if test='ruleType != null and ruleType != ""'>
			AND RULES200.R20_8 = #{ruleType} -- 룰 구분
			</if>
			<if test='branchYn != null and branchYn != ""'>
			AND RULES200.R20_E = #{branchYn}	-- 분기 여부
			</if>
			<if test='approveYn != null and approveYn != ""'>
			AND RULES200.R20_C = #{approveYn} -- 승인 여부
			</if>
		ORDER BY 
			RULES200.R20_1 ASC, RULES200.R20_2 ASC
	) DS
)
WHERE
	RNUM BETWEEN #{startRowNum} AND #{endRowNum}
</select>

<!-- 테스트용: 기준룰포함 기준룰의모든 하위 관계룰 조회 -->
<select id="selectRuleChildAll" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE AS (
	SELECT
		 RULES220.R22_2 -- 룰ID
		,RULES220.R20_1 -- 부모룰ID
		,RULES200.R20_2 -- 룰명
		,RULES210.R21_1 -- 룰버전 *
	FROM 
		 RULES200 
		,RULES210 
		,RULES220 
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES210.R20_1 = RULES200.R20_1
		AND RULES200.R20_1 = RULES220.R22_2
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		--AND RULES210.R21_1 = RULES220.R21_1 ( RULES220 의 하위룰ID 에 해당하는 버전정보는 가지고있지않음 고로 하단에  GROUP BY함 ) 
		AND RULES200.R19_1 = 0		
		AND RULES210.R19_1 = 0
		AND RULES220.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES200.R20_9 != 'D'
		AND RULES220.R22_3 != 'Y'
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1 ,RULES200.R20_2 ,RULES210.R21_1	
)
,WA_HIERACHY ( R22_2 ,R20_1 ,R20_2 ,R21_1 ) AS (
	  	SELECT
		 	 R22_2
			,R20_1
			,R20_2
			,R21_1  
		FROM 
			WA_CHILD_RULE
		WHERE 
			R20_1 = #{ruleId} 
	UNION ALL
	   	SELECT 
		 	 CHILDS.R22_2
			,CHILDS.R20_1
			,CHILDS.R20_2
			,CHILDS.R21_1	
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.R22_2 = CHILDS.R20_1
)
SELECT 
	 RULES210.R20_1 RULEID -- 룰ID
	,'root' RULEID_PRNT -- 부모룰ID
	,RULES200.R20_2 RULE_NM -- 룰명
	,RULES210.R21_1 RULE_VER -- 룰버전 *
FROM 
	 RULES200
	,RULES210
WHERE 1=1
	AND RULES200.R19_1 = RULES210.R19_1
	AND RULES200.R20_1 = RULES210.R20_1
	AND RULES200.R19_1 = 0 -- FIX HISTORY ID
	AND RULES210.R19_1 = 0 -- FIX HISTORY ID
	AND RULES200.R20_9 != 'D' -- FIX
	AND RULES210.R21_9 != 'D' -- FIX
	AND RULES200.R20_1 = #{ruleId} 
GROUP BY 
	RULES210.R20_1, RULES200.R20_2, RULES210.R21_1, RULES210.R19_1	
UNION
SELECT 
	 R22_2 -- 룰ID
	,MIN(R20_1) R20_1 -- 부모룰ID ( R22_2 기준 중복제거를 해야함으로 부모 룰ID 는 큰의미없음으로 MIN 처리함 )
	,R20_2 -- 룰명
	,R21_1 -- 룰버전
FROM 
	WA_HIERACHY 
GROUP BY 
	R22_2, R20_2, R20_2, R21_1
</select>

<!-- 테스트용: 기준룰포함 기준룰의모든 하위 관계룰의 입출력항목 조회 -->
<select id="selectRuleChildAllAndIO" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE AS (
	SELECT
		 RULES220.R22_2 -- 룰ID
		,RULES220.R20_1 -- 부모룰ID
		,RULES200.R20_2 -- 룰명
		,RULES210.R21_1 -- 룰버전 *
	FROM 
		 RULES200 
		,RULES210 
		,RULES220 
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES210.R20_1 = RULES200.R20_1
		AND RULES200.R20_1 = RULES220.R22_2
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		--AND RULES210.R21_1 = RULES220.R21_1 ( RULES220 의 하위룰ID 에 해당하는 버전정보는 가지고있지않음 고로 하단에  GROUP BY함 ) 
		AND RULES200.R19_1 = 0		
		AND RULES210.R19_1 = 0
		AND RULES220.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES200.R20_9 != 'D'
		AND RULES220.R22_3 != 'Y'
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1 ,RULES200.R20_2 ,RULES210.R21_1 ,RULES220.R19_1			
)
,WA_HIERACHY ( R22_2 ,R20_1 ,R20_2 ,R21_1 ) AS (
	  	SELECT
		 	 R22_2
			,R20_1
			,R20_2
			,R21_1  
		FROM 
			WA_CHILD_RULE
		WHERE 
			R20_1 = #{ruleId} 
	UNION ALL
	   	SELECT 
		 	 CHILDS.R22_2
			,CHILDS.R20_1
			,CHILDS.R20_2
			,CHILDS.R21_1
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.R22_2 = CHILDS.R20_1
)
SELECT * FROM ( 
	SELECT 
		 'I' IO_TYPE 
		,RULES_DS.RULEID  -- 룰ID
		,RULES_DS.RULEID_PRNT 	 -- 부모룰ID
		,RULES_DS.R20_2 RULE_NM  -- 룰명
		,RULES_DS.R21_1 RULE_VER -- 룰버전
		,RULES_INPT.R31_1 RULE_ORDER --항목순번
		,RULES_INPT.R31_2 ITEM_CODE  --항목코드
		,RULES_INPT.R31_3 ITEM_ARRAY --배열갯수
		,RULES_INPT.R31_4 ITEM_DESC --항목설명
		,RULES_INPT.R10_3 ITEM_TYPE --항목형식 (별도 1숫자,2문자 )
		,RULES_INPT.R10_2 ITEM_NAME --항목명
		,RULES_INPT.R10_4 ITEM_DEF_DESC --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,RULES_INPT.R10_F ITEM_ALIAS --항목별칭
		,RULES_INPT.R10_6 ITEM_USE_TYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		(
			SELECT 
				 RULES210.R20_1 RULEID  -- 룰ID
				,'root' RULEID_PRNT -- 부모룰ID
				,RULES200.R20_2  -- 룰명
				,RULES210.R21_1  -- 룰버전 *
			FROM 
				 RULES200
				,RULES210
			WHERE 1=1
				AND RULES200.R19_1 = RULES210.R19_1
				AND RULES200.R20_1 = RULES210.R20_1
				AND RULES200.R19_1 = 0 -- FIX HISTORY ID
				AND RULES210.R19_1 = 0 -- FIX HISTORY ID
				AND RULES200.R20_9 != 'D' -- FIX
				AND RULES210.R21_9 != 'D' -- FIX
				AND RULES200.R20_1 = #{ruleId} 
			GROUP BY 
				RULES210.R20_1, RULES200.R20_2, RULES210.R21_1
			UNION
			SELECT 
				 R22_2 RULEID -- 룰ID
				,MIN(R20_1) RULEID_PRNT -- 부모룰ID ( R22_2 기준 중복제거를 해야함으로 부모 룰ID 는 큰의미없음으로 MIN 처리함 )
				,R20_2 -- 룰명
				,R21_1 -- 룰버전
			FROM 
				WA_HIERACHY 
			GROUP BY 
				R22_2, R20_2, R21_1
		) 
		RULES_DS LEFT OUTER JOIN (
			SELECT 
				 RULES310.R20_1 --룰번호	
				,RULES310.R21_1 --버젼	
				,RULES310.R31_1 --순번	
				,RULES310.R31_2 --항목코드	
				,MAX(RULES310.R31_3) R31_3 --배열갯수	
				,MAX(RULES310.R31_4) R31_4 --항목설명	
				,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
				,RULES100.R10_2 --항목명
				,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
				,RULES100.R10_F --항목별칭
				,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
			FROM
				 RULES210
				,RULES310 
				,RULES130 
				,RULES100	
			WHERE 1=1
				AND RULES210.R19_1 = RULES310.R19_1
				AND RULES210.R20_1 = RULES310.R20_1
				AND RULES210.R21_1 = RULES310.R21_1
				AND RULES130.R13_1 = RULES100.R13_1
				AND RULES100.R10_1 = RULES310.R31_2 -- 항목코드
				AND RULES310.R31_5 = 'N' --임시항목구분 ( 조건 : 정의필요 )
				AND RULES100.R19_1 = 0
				AND RULES100.R10_5 != 'D'
				AND RULES210.R19_1 = 0	
				AND RULES210.R21_9 != 'D' --이관속성 ( 조건 : 컬럼 != 'D' )
				AND RULES310.R19_1 = 0
			GROUP BY 
				 RULES310.R20_1 --룰번호	
				,RULES310.R21_1 --버젼	
				,RULES310.R31_1 --순번	
				,RULES310.R31_2 --항목코드	
				,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
				,RULES100.R10_2 --항목명
				,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
				,RULES100.R10_F --항목별칭
				,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )	
		) RULES_INPT ON 1=1
			AND RULES_DS.RULEID = RULES_INPT.R20_1 --룰번호	
			AND RULES_DS.R21_1 = RULES_INPT.R21_1 --버젼
UNION ALL
	SELECT 
		 'O' IO_TYPE
		,R20_1 RULEID  -- 룰ID+
		,'' RULEID_PRNT -- 부모룰ID
		,NULL RULE_NM  -- 룰명
		,0 RULE_VER  -- 룰버전
		,R32_1 RULE_ORDER --순번+
		,'' ITEM_CODE --항목코드
		,1 ITEM_ARRAY --배열갯수
		,NULL ITEM_DESC --항목설명
		,R32_2 ITEM_TYPE --리턴형식 (별도 1숫자,2문자,3논리 )+
		,R32_3 ITEM_NAME --리턴이름+
		,NULL ITEM_DEF_DESC --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,R32_4 ITEM_ALIAS --리턴별칭+
		,'' ITEM_USE_TYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		RULES320
	WHERE 1=1
		AND R19_1 = 0
		AND R20_1 = #{ruleId} 
)	
ORDER BY 
	IO_TYPE, RULEID, RULE_ORDER	
</select>

<!-- 작업중 ioType (in, out) 에 따라 I/O 컬럼 정보 조회  (id, name, type, alias, array) -->
<select id="selectRuleIO" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
-- IO SELECT v3
WITH WA_CHILD_RULE AS (
	SELECT
		 RULES220.R22_2 -- 룰ID
		,RULES220.R20_1 -- 부모룰ID
		,RULES200.R20_2 -- 룰명
		,RULES210.R21_1 -- 룰버전 *
	FROM 
		 RULES200 
		,RULES210 
		,RULES220 
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES210.R20_1 = RULES200.R20_1
		AND RULES200.R20_1 = RULES220.R22_2
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		--AND RULES210.R21_1 = RULES220.R21_1 ( RULES220 의 하위룰ID 에 해당하는 버전정보는 가지고있지않음 고로 하단에  GROUP BY함 ) 
		AND RULES200.R19_1 = 0		
		AND RULES210.R19_1 = 0
		AND RULES220.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES200.R20_9 != 'D'
		AND RULES220.R22_3 != 'Y'
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1 ,RULES200.R20_2 ,RULES210.R21_1	
)
,WA_HIERACHY ( lv, R22_2 ,R20_1 ,R20_2 ,R21_1 ) AS (
	  	SELECT
	  		 1 lv
		 	,R22_2
			,R20_1
			,R20_2
			,R21_1  
		FROM 
			WA_CHILD_RULE
		WHERE 
			R20_1 = #{ruleId} 
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.lv + 1
		 	,CHILDS.R22_2
			,CHILDS.R20_1
			,CHILDS.R20_2
			,CHILDS.R21_1
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.R22_2 = CHILDS.R20_1
)
SELECT * FROM ( 
	SELECT 
		 'I' IOTYPE 
		,MAX(RULES_DS.RULEID) RULEID -- 룰ID max
		,MAX(RULES_DS.RULEIDPRNT) RULEIDPRNT -- 부모룰ID max
		,MAX(RULES_DS.R20_2) RULENAME  -- 룰명 max
		,MAX(RULES_DS.R21_1) RULEVERSION -- 룰버전 max
		,RULES_INPT.R31_2 ID  --항목코드
		,MAX(RULES_INPT.R31_3) ARRAY --배열갯수 max
		,MAX(RULES_INPT.R31_4) DESCRIPTION --항목설명 max
		,RULES_INPT.R10_3 TYPECODE --항목형식 (별도 1숫자,2문자 )
		,RULES_INPT.R10_2 NAME --항목명
		,RULES_INPT.R10_4 DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,RULES_INPT.R10_F ALIAS --항목별칭
		,MAX(RULES_INPT.R31_1) ORDERS --항목순번 max
		,RULES_INPT.R10_6 USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		(
			SELECT 
				 RULES210.R20_1 RULEID  -- 룰ID
				,'root' RULEIDPRNT -- 부모룰ID
				,RULES200.R20_2  -- 룰명
				,RULES210.R21_1  -- 룰버전 *
			FROM 
				 RULES200
				,RULES210
			WHERE 1=1
				AND RULES200.R19_1 = RULES210.R19_1
				AND RULES200.R20_1 = RULES210.R20_1
				AND RULES200.R19_1 = 0 -- FIX HISTORY ID
				AND RULES210.R19_1 = 0 -- FIX HISTORY ID
				AND RULES200.R20_9 != 'D' -- FIX
				AND RULES210.R21_9 != 'D' -- FIX
				AND RULES200.R20_1 = #{ruleId} 
			GROUP BY 
				RULES210.R20_1, RULES200.R20_2, RULES210.R21_1
			UNION
			SELECT 
				 R22_2 RULEID -- 룰ID
				,MIN(R20_1) RULEIDPRNT -- 부모룰ID ( R22_2 기준 중복제거를 해야함으로 부모 룰ID 는 큰의미없음으로 MIN 처리함 )
				,R20_2 -- 룰명
				,R21_1 -- 룰버전
			FROM 
				WA_HIERACHY 
			GROUP BY 
				R22_2, R20_2, R21_1
		) 
		RULES_DS INNER JOIN ( -- LEFT OUTER 
			SELECT 
				 RULES310.R20_1 -- 룰코드
				--,RULES310.R19_1 -- 히스토리ID
				--,RULES310.R21_1 -- 룰버전
				,MAX(RULES310.R31_1) R31_1 --항목순번 --항목순번
				,RULES310.R31_2 --항목코드
				,MAX(RULES310.R31_3) R31_3 --배열갯수 --배열
				,MAX(RULES310.R31_4) R31_4 --항목설명 --항목설명	
				,RULES310.R31_5 -- 임시항목구분
				,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
				,RULES100.R10_2 --항목명
				,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
				,RULES100.R10_F --항목별칭
				,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
			FROM
				 RULES130
				,RULES100
				,RULES310
				,RULES210
			WHERE 1=1
				AND RULES130.R13_1 = RULES100.R13_1
				AND RULES100.R10_1 = RULES310.R31_2
				AND RULES100.R19_1 = RULES310.R19_1
				AND RULES210.R19_1 = RULES310.R19_1
				AND RULES210.R20_1 = RULES310.R20_1
				AND RULES210.R21_1 = RULES310.R21_1
				AND RULES100.R19_1 = 0
				AND RULES100.R10_5 != 'D'
				AND RULES310.R19_1 = 0
				AND RULES310.R31_5 = 'N' 
				AND RULES210.R19_1 = 0
				AND RULES210.R21_9 != 'D'	
			GROUP BY
				 RULES310.R19_1, RULES310.R20_1, RULES310.R21_1
				,RULES310.R31_2 ,RULES310.R31_5
				,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
				,RULES100.R10_2 --항목명
				,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
				,RULES100.R10_F --항목별칭
				,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )	
		) RULES_INPT ON 1=1
			AND RULES_DS.RULEID = RULES_INPT.R20_1 --룰번호	
	GROUP BY
		 RULES_INPT.R31_2 -- ID  --항목코드
		,RULES_INPT.R10_3 -- TYPECODE --항목형식 (별도 1숫자,2문자 )
		,RULES_INPT.R10_2 -- NAME --항목명
		,RULES_INPT.R10_4 -- DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,RULES_INPT.R10_F -- ALIAS --항목별칭
		,RULES_INPT.R10_6 -- USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )	 			
UNION ALL
	SELECT 
		 'O' 	IOTYPE
		,R20_1 	RULEID  -- 룰ID+
		,'' 	RULEIDPRNT -- 부모룰ID
		,NULL 	RULENAME  -- 룰명
		,0 		RULEVERSION  -- 룰버전
		,'' 	ID --항목코드
		,1 		ARRAY --배열갯수
		,NULL 	DESCRIPTION --항목설명
		,R32_2 	TYPECODE --리턴형식 (별도 1숫자,2문자,3논리 )+
		,R32_3 	NAME --리턴이름+
		,NULL 	DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,R32_4 	ALIAS --리턴별칭+
		,R32_1 	ORDERS --순번+
		,'' 	USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		RULES320
	WHERE 1=1
		AND R19_1 = 0
		AND R20_1 = #{ruleId} 
)	
ORDER BY IOTYPE, ORDERS, NAME
</select>

<select id="selectRuleInputSort" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnSortDTO">
SELECT 
	 RULES2T0.R20_1 R201
	,RULES2T0.R2T_1 R2T1
	,RULES2T0.R2T_2 R2T2
FROM 
	RULES200, 
	RULES2S0,
	RULES2T0  
WHERE 1=1
	AND RULES200.R19_1 = RULES2S0.R19_1
	AND RULES200.R20_1 = RULES2S0.R20_1 
	AND RULES2S0.R19_1 = RULES2T0.R19_1
	AND RULES2S0.R20_1 = RULES2T0.R20_1
	AND RULES2S0.R2S_1 = RULES2T0.R2S_1
	AND RULES2S0.R2S_2 = RULES2T0.R2S_2
	AND RULES2S0.R2S_3 = RULES2T0.R2S_3  
	AND RULES2T0.R2S_1 = 3
	AND RULES2S0.R2S_2 = 1
	AND RULES2S0.R2S_3 = 1
	AND RULES2S0.R20_1 = #{ruleId} 
ORDER BY 
	RULES2T0.R2T_1
</select>


<!-- FULL HIERARCHY USE ITEM -->
<select id="selectOriginalRuleIO" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE ( RULEID ,RULEIDPRNT ) AS (
	SELECT /*+ NO_MERGE LEADING(RULES200 RULES210 RULES220) MATERIALIZE */
		 RULES220.R22_2 RULEID-- 룰ID		
		,RULES220.R20_1 RULEIDPRNT-- 부모룰ID
	FROM 
		 RULES200
		,RULES210 
		,RULES220
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		AND RULES200.R19_1 = 0		
		AND RULES200.R20_9 != 'D'
		AND RULES210.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES220.R19_1 = 0
		AND RULES220.R22_3 != 'Y'	
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1
)
,WA_HIERACHY ( LV, RULEID ,RULEIDPRNT ) AS (
	  	SELECT
	  		 1 LV
		 	,RULEIDPRNT RULEID
			,'ROOT' RULEIDPRNT
		FROM 
			WA_CHILD_RULE
		WHERE 
			RULEIDPRNT = #{ruleId}
		GROUP BY 
			RULEIDPRNT			
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.LV + 1
		 	,CHILDS.RULEID
			,CHILDS.RULEIDPRNT
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.RULEID = CHILDS.RULEIDPRNT
)
SELECT * FROM 
(
SELECT /*+ NO_MERGE LEADING(RULES_INPT RULES_DS) */
	 'I' IOTYPE 
	,COUNT(1) MERGE_COUNT
	,RULES_DS.RULEID
	,RULES_DS.RULEIDPRNT
	,RULES_INPT.R31_2 ID  --항목코드
	,RULES_INPT.R31_3 ARRAY --배열갯수 max
	,RULES_INPT.R31_4 DESCRIPTION --항목설명 max
	,RULES_INPT.R10_3 TYPECODE --항목형식 (별도 1숫자,2문자 )
	,RULES_INPT.R10_2 NAME --항목명
	,RULES_INPT.R10_4 DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
	,RULES_INPT.R10_F ALIAS --항목별칭
	,RULES_INPT.R31_1 ORDERS --항목순번 max
	,RULES_INPT.R10_6 USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
FROM 
	WA_HIERACHY RULES_DS INNER JOIN ( -- LEFT OUTER 
		SELECT
			 RULES310.R20_1 -- 룰코드
			,MAX(RULES310.R31_1) R31_1 --항목순번
			,RULES310.R31_2 --항목코드
			,MAX(RULES310.R31_3) R31_3 --배열갯수
			,MAX(RULES310.R31_4) R31_4 --항목설명
			,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
			,RULES100.R10_2 --항목명
			,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
			,MAX(RULES100.R10_F) R10_F --항목별칭
			,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
		FROM
			 RULES130
			,RULES100
			,WA_HIERACHY --RULES210
			,RULES310 
		WHERE 1=1
			AND RULES130.R13_1 = RULES100.R13_1
			AND RULES100.R10_1 = RULES310.R31_2
			AND RULES100.R19_1 = RULES310.R19_1
			AND WA_HIERACHY.RULEID = RULES310.R20_1
			AND RULES100.R19_1 = 0
			AND RULES100.R10_5 != 'D'
			AND RULES310.R19_1 = 0
			AND RULES310.R31_5 = 'N' -- 임시항목구분
		GROUP BY
			 RULES310.R20_1 -- 룰코드
			,RULES310.R31_2 --항목코드
			,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
			,RULES100.R10_2 --항목명
			,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
			,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )						
	) RULES_INPT
		ON RULES_DS.RULEID = RULES_INPT.R20_1 --룰번호	
GROUP BY
	 RULES_DS.RULEID
	,RULES_DS.RULEIDPRNT
	,RULES_INPT.R31_2 -- ID  --항목코드
	,RULES_INPT.R10_3 -- TYPECODE --항목형식 (별도 1숫자,2문자 )
	,RULES_INPT.R10_2 -- NAME --항목명
	,RULES_INPT.R10_4 -- DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
	,RULES_INPT.R10_F -- ALIAS --항목별칭
	,RULES_INPT.R10_6 -- USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	,RULES_INPT.R31_1
	,RULES_INPT.R31_3
	,RULES_INPT.R31_4		
UNION ALL
	SELECT 
		 'O' 	IOTYPE
		,0 MERGE_COUNT
		,R20_1 RULEID
		,'' RULEIDPRNT		
		,'' 	ID --항목코드
		,1 		ARRAY --배열갯수
		,NULL 	DESCRIPTION --항목설명
		,R32_2 	TYPECODE --리턴형식 (별도 1숫자,2문자,3논리 )+
		,R32_3 	NAME --리턴이름+
		,NULL 	DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,R32_4 	ALIAS --리턴별칭+
		,R32_1 	ORDERS --순번+
		,'' 	USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		RULES320
	WHERE 1=1
		AND R19_1 = 0
		AND R20_1 = #{ruleId} 
)	
ORDER BY IOTYPE, ORDERS, NAME
</select>

<!-- FULL HIERARCHY + 2HO ITEM -->
<select id="selectExcludeRuleInput" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE ( RULEID ,RULEIDPRNT ) AS (
	SELECT /*+ NO_MERGE MATERIALIZE */
		 RULES220.R22_2 RULEID-- 룰ID		
		,RULES220.R20_1 RULEIDPRNT-- 부모룰ID
	FROM 
		 RULES200
		,RULES210 
		,RULES220
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		AND RULES200.R19_1 = 0		
		AND RULES200.R20_9 != 'D'
		AND RULES210.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES220.R19_1 = 0
		AND RULES220.R22_3 != 'Y'	
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1
)
,WA_HIERACHY ( LV, RULEID ,RULEIDPRNT ) AS (
	  	SELECT 
	  		 1 LV
		 	,RULEIDPRNT RULEID
			,'ROOT' RULEIDPRNT
		FROM 
			WA_CHILD_RULE
		WHERE 
			RULEIDPRNT = #{ruleId}
		GROUP BY 
			RULEIDPRNT			
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.LV + 1
		 	,CHILDS.RULEID
			,CHILDS.RULEIDPRNT
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.RULEID = CHILDS.RULEIDPRNT
)
SELECT 
	 WA_HIERACHY.LV
	,WA_HIERACHY.RULEID -- 룰ID
	,WA_HIERACHY.RULEIDPRNT
	,EXC_ITEM.R2H_1 ID 
FROM 
	WA_HIERACHY 
	LEFT OUTER JOIN (
			SELECT 
                 RULES220.R20_1
                ,RULES220.R22_2
                ,RULES2H0.R2H_1
            FROM 
                 RULES200 
                ,RULES210			
                ,RULES220
                ,RULES2H0
            WHERE 1=1
                AND RULES200.R19_1 = RULES210.R19_1
                AND RULES200.R20_1 = RULES210.R20_1
                AND RULES210.R20_1 = RULES220.R22_2
                AND RULES210.R19_1 = RULES220.R19_1
                AND RULES220.R19_1 = RULES2H0.R19_1 
                AND RULES220.R20_1 = RULES2H0.R20_1 
                AND RULES220.R21_1 = RULES2H0.R21_1
                AND RULES220.R22_1 = RULES2H0.R22_1
                AND RULES200.R19_1 = 0		
                AND RULES200.R20_9 != 'D'		
                AND RULES210.R19_1 = 0
                AND RULES210.R21_9 != 'D' 		
                AND RULES220.R19_1 = 0
                AND RULES220.R22_3 != 'Y'					
                AND RULES2H0.R19_1 = 0	
            GROUP BY
                 RULES220.R20_1
                ,RULES220.R22_2
                ,RULES2H0.R2H_1	
		) EXC_ITEM
		ON  EXC_ITEM.R20_1 = WA_HIERACHY.RULEIDPRNT
		AND EXC_ITEM.R22_2 = WA_HIERACHY.RULEID	
</select>

<!-- FULL HIERARCHY + 2HO ITEM LEFT OUTER 310 -->
<select id="selectExcludeRuleInput_LEFTOUT310" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE ( RULEID ,RULEIDPRNT ) AS (
	SELECT /*+ NO_MERGE MATERIALIZE */
		 RULES220.R22_2 RULEID-- 룰ID		
		,RULES220.R20_1 RULEIDPRNT-- 부모룰ID
	FROM 
		 RULES200
		,RULES210 
		,RULES220
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		AND RULES200.R19_1 = 0		
		AND RULES200.R20_9 != 'D'
		AND RULES210.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES220.R19_1 = 0
		AND RULES220.R22_3 != 'Y'	
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1
)
,WA_HIERACHY ( LV, RULEID ,RULEIDPRNT ) AS (
	  	SELECT
	  		 1 LV
		 	,RULEIDPRNT RULEID
			,'ROOT' RULEIDPRNT
		FROM 
			WA_CHILD_RULE
		WHERE 
			RULEIDPRNT = #{ruleId}
		GROUP BY 
			RULEIDPRNT			
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.LV + 1
		 	,CHILDS.RULEID
			,CHILDS.RULEIDPRNT
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.RULEID = CHILDS.RULEIDPRNT
)
SELECT 
	 WA_HIERACHY.LV
	,WA_HIERACHY.RULEID -- 룰ID
	,WA_HIERACHY.RULEIDPRNT
	,EXC_ITEM.R2H_1 ID ,EXC_ITEM.R31_2 R310
FROM 
	WA_HIERACHY 
	LEFT OUTER JOIN (
			SELECT 
				 EXCLUDE_ITEMS.R20_1
				,EXCLUDE_ITEMS.R22_2
				,EXCLUDE_ITEMS.R2H_1
				,RULES310.R31_2
			FROM 
				(
					SELECT 
						 RULES220.R20_1
						,RULES220.R22_2
						,RULES2H0.R2H_1
					FROM 
						 RULES200 
						,RULES210			
						,RULES220
						,RULES2H0
					WHERE 1=1
						AND RULES200.R19_1 = RULES210.R19_1
						AND RULES200.R20_1 = RULES210.R20_1
						AND RULES210.R20_1 = RULES220.R22_2
						AND RULES210.R19_1 = RULES220.R19_1
						AND RULES220.R19_1 = RULES2H0.R19_1 
						AND RULES220.R20_1 = RULES2H0.R20_1 
						AND RULES220.R21_1 = RULES2H0.R21_1
						AND RULES220.R22_1 = RULES2H0.R22_1
						AND RULES200.R19_1 = 0		
						AND RULES200.R20_9 != 'D'		
						AND RULES210.R19_1 = 0
						AND RULES210.R21_9 != 'D' 		
						AND RULES220.R19_1 = 0
						AND RULES220.R22_3 != 'Y'					
						AND RULES2H0.R19_1 = 0	
					GROUP BY
						 RULES220.R20_1
						,RULES220.R22_2
						,RULES2H0.R2H_1	
				) EXCLUDE_ITEMS LEFT OUTER JOIN RULES310 
					ON  RULES310.R20_1 = EXCLUDE_ITEMS.R22_2
					AND RULES310.R31_2 = EXCLUDE_ITEMS.R2H_1
					AND RULES310.R19_1 = 0
					AND RULES310.R31_5 = 'Y' 
			GROUP BY
				 EXCLUDE_ITEMS.R20_1
				,EXCLUDE_ITEMS.R22_2
				,EXCLUDE_ITEMS.R2H_1
				,RULES310.R31_2
		) EXC_ITEM
		ON  EXC_ITEM.R20_1 = WA_HIERACHY.RULEIDPRNT
		AND EXC_ITEM.R22_2 = WA_HIERACHY.RULEID	
</select>

<select id="selectOriginalRuleIO_groupby" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE AS (
	SELECT
		 RULES220.R20_1 -- 부모룰ID
		,RULES220.R22_2 -- 룰ID
	FROM 
		 RULES200 
		,RULES210 
		,RULES220
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		--AND RULES210.R21_1 = RULES220.R21_1 ( RULES220 의 하위룰ID 에 해당하는 버전정보는 가지고있지않음 고로 하단에  GROUP BY함 ) 
		AND RULES200.R19_1 = 0		
		AND RULES200.R20_9 != 'D'
		AND RULES210.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES220.R19_1 = 0
		AND RULES220.R22_3 != 'Y'	
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1
)
,WA_HIERACHY ( lv, R22_2 ,R20_1 ) AS (
	  	SELECT
	  		 1 lv
		 	,R22_2
			,R20_1 
		FROM 
			WA_CHILD_RULE
		WHERE 
			R20_1 = #{ruleId} 
		GROUP BY 
		 	 R22_2
			,R20_1
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.lv + 1
		 	,CHILDS.R22_2
			,CHILDS.R20_1
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.R22_2 = CHILDS.R20_1
)
,WA_RULE_DS AS (
	SELECT 
		 RULES210.R20_1 RULEID  -- 룰ID
		,'root' RULEIDPRNT -- 부모룰ID
	FROM 
		 RULES200
		,RULES210
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES200.R19_1 = 0 -- FIX HISTORY ID
		AND RULES210.R19_1 = 0 -- FIX HISTORY ID
		AND RULES200.R20_9 != 'D' -- FIX
		AND RULES210.R21_9 != 'D' -- FIX
		AND RULES200.R20_1 = #{ruleId} 
	GROUP BY 
		RULES210.R20_1, RULES210.R21_1
	UNION
	SELECT 
		 R22_2 RULEID -- 룰ID
		,MIN(R20_1) RULEIDPRNT -- 부모룰ID ( R22_2 기준 중복제거를 해야함으로 부모 룰ID 는 큰의미없음으로 MIN 처리함 )
	FROM 
		WA_HIERACHY 
	GROUP BY 
		R22_2
) 
SELECT * FROM 
(
SELECT 
	 'I' IOTYPE 
	,COUNT(1) MERGE_COUNT
	,RULES_DS.RULEID
	,RULES_DS.RULEIDPRNT
	,RULES_INPT.R31_2 ID  --항목코드
	,RULES_INPT.R31_3 ARRAY --배열갯수 max
	,RULES_INPT.R31_4 DESCRIPTION --항목설명 max
	,RULES_INPT.R10_3 TYPECODE --항목형식 (별도 1숫자,2문자 )
	,RULES_INPT.R10_2 NAME --항목명
	,RULES_INPT.R10_4 DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
	,RULES_INPT.R10_F ALIAS --항목별칭
	,RULES_INPT.R31_1 ORDERS --항목순번 max
	,RULES_INPT.R10_6 USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
FROM 
	WA_RULE_DS RULES_DS INNER JOIN ( -- LEFT OUTER 
		SELECT
			 RULES310.R20_1 -- 룰코드
			,MAX(RULES310.R31_1) R31_1 --항목순번
			,RULES310.R31_2 --항목코드
			,MAX(RULES310.R31_3) R31_3 --배열갯수
			,MAX(RULES310.R31_4) R31_4 --항목설명
			--,RULES310.R31_5 -- 임시항목구분
			,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
			,RULES100.R10_2 --항목명
			,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
			,MAX(RULES100.R10_F) R10_F --항목별칭
			,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
		FROM
			 RULES130
			,RULES100
			,WA_RULE_DS --RULES210
			,RULES310 
		WHERE 1=1
			AND RULES130.R13_1 = RULES100.R13_1
			AND RULES100.R10_1 = RULES310.R31_2
			AND RULES100.R19_1 = RULES310.R19_1
			AND WA_RULE_DS.RULEID = RULES310.R20_1
			AND RULES100.R19_1 = 0
			AND RULES100.R10_5 != 'D'
			AND RULES310.R19_1 = 0
			AND RULES310.R31_5 = 'N' 
		GROUP BY
			 RULES310.R20_1 -- 룰코드
			,RULES310.R31_2 --항목코드
			--,RULES310.R31_5 -- 임시항목구분
			,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
			,RULES100.R10_2 --항목명
			,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
			--,RULES100.R10_F --항목별칭
			,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )						
	) RULES_INPT
		ON RULES_DS.RULEID = RULES_INPT.R20_1 --룰번호	
GROUP BY
	 RULES_DS.RULEID
	,RULES_DS.RULEIDPRNT
	,RULES_INPT.R31_2 -- ID  --항목코드
	,RULES_INPT.R10_3 -- TYPECODE --항목형식 (별도 1숫자,2문자 )
	,RULES_INPT.R10_2 -- NAME --항목명
	,RULES_INPT.R10_4 -- DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
	,RULES_INPT.R10_F -- ALIAS --항목별칭
	,RULES_INPT.R10_6 -- USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	,RULES_INPT.R31_1
	,RULES_INPT.R31_3
	,RULES_INPT.R31_4		
UNION ALL
	SELECT 
		 'O' 	IOTYPE
		,0 MERGE_COUNT
		,R20_1 RULEID
		,'' RULEIDPRNT		
		,'' 	ID --항목코드
		,1 		ARRAY --배열갯수
		,NULL 	DESCRIPTION --항목설명
		,R32_2 	TYPECODE --리턴형식 (별도 1숫자,2문자,3논리 )+
		,R32_3 	NAME --리턴이름+
		,NULL 	DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,R32_4 	ALIAS --리턴별칭+
		,R32_1 	ORDERS --순번+
		,'' 	USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		RULES320
	WHERE 1=1
		AND R19_1 = 0
		AND R20_1 = #{ruleId} 
)	
ORDER BY IOTYPE, ORDERS, NAME
</select>



<select id="selectExcludeRuleInput_groupby" parameterType="com.innorules.component.parameter.SearchParameter" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
WITH WA_CHILD_RULE AS (
	SELECT
		 RULES220.R20_1 -- 부모룰ID
		,RULES220.R22_2 -- 룰ID
	FROM 
		 RULES200 
		,RULES210 
		,RULES220
	WHERE 1=1
		AND RULES200.R19_1 = RULES210.R19_1
		AND RULES200.R20_1 = RULES210.R20_1
		AND RULES210.R20_1 = RULES220.R22_2
		AND RULES210.R19_1 = RULES220.R19_1
		--AND RULES210.R21_1 = RULES220.R21_1 ( RULES220 의 하위룰ID 에 해당하는 버전정보는 가지고있지않음 고로 하단에  GROUP BY함 ) 
		AND RULES200.R19_1 = 0		
		AND RULES200.R20_9 != 'D'
		AND RULES210.R19_1 = 0
		AND RULES210.R21_9 != 'D' 
		AND RULES220.R19_1 = 0
		AND RULES220.R22_3 != 'Y'	
	GROUP BY
		 RULES220.R22_2 ,RULES220.R20_1
)
,WA_HIERACHY ( lv, R22_2 ,R20_1 ) AS (
	  	SELECT
	  		 1 lv
		 	,R22_2
			,R20_1 
		FROM 
			WA_CHILD_RULE
		WHERE 
			R20_1 = #{ruleId} 
		GROUP BY 
		 	 R22_2
			,R20_1
	UNION ALL
	   	SELECT 
		 	 WA_HIERACHY.lv + 1
		 	,CHILDS.R22_2
			,CHILDS.R20_1
		 FROM 
		 	 WA_CHILD_RULE CHILDS
			,WA_HIERACHY
		 WHERE 
		 	WA_HIERACHY.R22_2 = CHILDS.R20_1
)
SELECT
	 WA_HIERACHY.R22_2 RULEID -- 룰ID
	,WA_HIERACHY.R20_1 RULEIDPRNT
	,EXC_ITEM.R2H_1 ID
	,EXC_ITEM.R31_2 R310
FROM 
	WA_HIERACHY LEFT OUTER JOIN (
			SELECT 
				 EXCLUDE_ITEMS.R20_1
				,EXCLUDE_ITEMS.R22_2
				,EXCLUDE_ITEMS.R2H_1
				,RULES310.R31_2
			FROM 
				(
					SELECT 
						 RULES220.R20_1
						,RULES220.R22_2
						,RULES2H0.R2H_1
					FROM 
						 RULES200 
						,RULES210			
						,RULES220
						,RULES2H0
					WHERE 1=1
						AND RULES200.R19_1 = RULES210.R19_1
						AND RULES200.R20_1 = RULES210.R20_1
						AND RULES210.R20_1 = RULES220.R22_2
						AND RULES210.R19_1 = RULES220.R19_1
						AND RULES220.R19_1 = RULES2H0.R19_1 
						AND RULES220.R20_1 = RULES2H0.R20_1 
						AND RULES220.R21_1 = RULES2H0.R21_1
						AND RULES200.R19_1 = 0		
						AND RULES200.R20_9 != 'D'		
						AND RULES210.R19_1 = 0
						AND RULES210.R21_9 != 'D' 		
						AND RULES220.R19_1 = 0
						AND RULES220.R22_3 != 'Y'					
						AND RULES2H0.R19_1 = 0	
					GROUP BY
						 RULES220.R20_1
						,RULES220.R22_2
						,RULES2H0.R2H_1	
				) EXCLUDE_ITEMS LEFT OUTER JOIN RULES310 
					ON  RULES310.R20_1 = EXCLUDE_ITEMS.R22_2
					AND RULES310.R31_2 = EXCLUDE_ITEMS.R2H_1
					AND RULES310.R19_1 = 0
					AND RULES310.R31_5 = 'Y' 
			GROUP BY
				 EXCLUDE_ITEMS.R20_1
				,EXCLUDE_ITEMS.R22_2
				,EXCLUDE_ITEMS.R2H_1
				,RULES310.R31_2
		) EXC_ITEM
		ON  EXC_ITEM.R20_1 = WA_HIERACHY.R20_1
		AND EXC_ITEM.R22_2 = WA_HIERACHY.R22_2		
GROUP BY 
	  WA_HIERACHY.R20_1 
	 ,WA_HIERACHY.R22_2 
	 ,EXC_ITEM.R2H_1
	 ,EXC_ITEM.R31_2
</select>


<!-- 20150309 -->
<select id="selectChildRule" parameterType="com.innorules.interfaces.dto.IRColumnsDTO" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
SELECT 
 	 RULES220.R22_2 RULEID
	,RULES220.R20_1 RULEIDPRNT
    ,RULES2H0.R2H_1 ID
FROM 
	 RULES210
	,RULES220 LEFT OUTER JOIN RULES2H0 
        ON  RULES220.R19_1 = RULES2H0.R19_1
        AND RULES220.R20_1 = RULES2H0.R20_1
        AND RULES220.R21_1 = RULES2H0.R21_1
        AND RULES220.R22_1 = RULES2H0.R22_1
        AND RULES2H0.R19_1 = 0
WHERE 1=1
	AND RULES220.R19_1 = RULES210.R19_1
	AND RULES220.R20_1 = RULES210.R20_1
	AND RULES220.R21_1 = RULES210.R21_1
	AND RULES220.R22_3 != 'Y'
	AND RULES220.R19_1 = 0
    AND RULES210.R21_9 != 'D'
	AND RULES210.R19_1 = 0
	AND RULES220.R20_1 = #{ruleid}
GROUP BY	
	 RULES220.R22_2
	,RULES220.R20_1
    ,RULES2H0.R2H_1
</select>


<!-- 20150309 -->
<select id="selectRuleInput" parameterType="com.innorules.interfaces.dto.IRColumnsDTO" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
SELECT 
	 RULES310.R20_1 RULEID
	,#{ruleidPrnt} RULEIDPRNT
    ,RULES310.R31_2 ID --항목코드
    ,MAX(RULES310.R31_3) ARRAY --배열갯수
    ,MAX(RULES310.R31_4) DESCRIPTION --항목설명
    ,RULES100.R10_3 TYPECODE--항목형식 (별도 1숫자,2문자 )
    ,RULES100.R10_2 NAME--항목명
    ,RULES100.R10_4 DEFAULTDESCRIPTION--항목기본설명 ( RULES310 의 항목설명이 없을경우노출 )
    ,MAX(RULES100.R10_F) ALIAS --항목별칭
    ,MAX(RULES310.R31_1) ORDERS --항목순번
    ,RULES100.R10_6 USETYPE--항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )			
FROM
     RULES130
    ,RULES100
    ,RULES310             
WHERE 1=1
    AND RULES130.R13_1 = RULES100.R13_1
    AND RULES100.R10_1 = RULES310.R31_2
    AND RULES100.R19_1 = RULES310.R19_1
    AND RULES100.R19_1 = 0
    AND RULES100.R10_5 != 'D'
    AND RULES310.R19_1 = 0
    AND RULES310.R31_5 = 'N' -- 임시항목구분
    AND RULES310.R20_1 = #{ruleid} 
GROUP BY
	 RULES310.R20_1
    ,RULES310.R31_2 --항목코드
    ,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
    ,RULES100.R10_2 --항목명
    ,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
    ,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
</select>

<!-- 20150309 -->
<select id="inSelectRuleInput" parameterType="com.innorules.interfaces.dto.IRColumnsDTO" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
SELECT 
	 RULES310.R20_1 RULEID
    ,RULES310.R31_2 ID --항목코드
    ,MAX(RULES310.R31_3) ARRAY --배열갯수
    ,MAX(RULES310.R31_4) DESCRIPTION --항목설명
    ,RULES100.R10_3 TYPECODE--항목형식 (별도 1숫자,2문자 )
    ,RULES100.R10_2 NAME--항목명
    ,RULES100.R10_4 DEFAULTDESCRIPTION--항목기본설명 ( RULES310 의 항목설명이 없을경우노출 )
    ,MAX(RULES100.R10_F) ALIAS --항목별칭
    ,MAX(RULES310.R31_1) ORDERS --항목순번
    ,RULES100.R10_6 USETYPE--항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )			
FROM
     RULES130
    ,RULES100
    ,RULES310             
WHERE 1=1
    AND RULES130.R13_1 = RULES100.R13_1
    AND RULES100.R10_1 = RULES310.R31_2
    AND RULES100.R19_1 = RULES310.R19_1
    AND RULES100.R19_1 = 0
    AND RULES100.R10_5 != 'D'
    AND RULES310.R19_1 = 0
    AND RULES310.R31_5 = 'N' -- 임시항목구분
    AND RULES310.R20_1 IN 
    <foreach item="ruleid" index="index" collection="ruleidList" open="(" separator="," close=")">
    #{ruleid}
    </foreach>
GROUP BY
	 RULES310.R20_1
    ,RULES310.R31_2 --항목코드
    ,RULES100.R10_3 --항목형식 (별도 1숫자,2문자 )
    ,RULES100.R10_2 --항목명
    ,RULES100.R10_4 --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
    ,RULES100.R10_6 --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
</select>

<select id="selectRuleOutput" parameterType="com.innorules.interfaces.dto.IRColumnsDTO" resultType="com.innorules.interfaces.dto.IRColumnsDTO">
	SELECT 
		 R20_1 RULEID
		,'' RULEIDPRNT		
		,'' 	ID --항목코드
		,1 		ARRAY --배열갯수
		,NULL 	DESCRIPTION --항목설명
		,R32_2 	TYPECODE --리턴형식 (별도 1숫자,2문자,3논리 )+
		,R32_3 	NAME --리턴이름+
		,NULL 	DEFAULTDESCRIPTION --항목설명 ( RULES310 의 항목설명이 없을경우노출 )
		,R32_4 	ALIAS --리턴별칭+
		,R32_1 	ORDERS --순번+
		,'' 	USETYPE --항목사용구분 ( N:일반항목, P:상품항목, S:표준항목 )
	FROM 
		RULES320
	WHERE 1=1
		AND R19_1 = 0
		AND R20_1 = #{ruleid} 
</select>


</mapper>  