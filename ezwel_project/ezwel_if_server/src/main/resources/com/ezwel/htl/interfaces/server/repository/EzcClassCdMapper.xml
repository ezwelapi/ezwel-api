<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezwel.htl.interfaces.server.repository.EzcClassCdMapper">
<!--
 * History : SQL Mapper Generated By iCodeManager Made by API Team KSW
 *
 * 버전          성명                   일자              		변경내용
 * =======       ================       ===================		=================
 * 0.0.1         CodeSkeleton (ksw)     2018-12-03 11:05:02 	신규작성 
 * 
 * @since 2018-12-03 11:05:02
 * @version 0.0.1
 * @author ksw
 * @see "DBIO Mapper"
 * -->
<insert id="insertEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
INSERT INTO EZC_CLASS_CD(	/* 공통 분류 코드 */
	 CLASS_CD	/* 분류 코드, VARCHAR2(4) */
	,CLASS_NM	/* 분류 명, VARCHAR2(50) */
	,CLASS_DESC	/* 분류 설명, VARCHAR2(1000) */
	,USE_YN	/* 사용 여부, CHAR(1) */
	,REG_ID	/* 등록자 ID, VARCHAR2(20) */
	,REG_DT	/* 등록 일시, VARCHAR2(14) */
) VALUES (
	 #{classCd, jdbcType=VARCHAR}
	,#{classNm, jdbcType=VARCHAR}
	,#{classDesc, jdbcType=VARCHAR}
	,#{useYn, jdbcType=CHAR}
	,#{regId, jdbcType=VARCHAR}
	,#{regDt, jdbcType=VARCHAR}
)
</insert>

<select id="selectEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd" resultType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
SELECT
	 EZC_CLASS_CD.CLASS_CD AS classCd	/* 분류 코드, VARCHAR2(4) */
	,EZC_CLASS_CD.CLASS_NM AS classNm	/* 분류 명, VARCHAR2(50) */
	,EZC_CLASS_CD.CLASS_DESC AS classDesc	/* 분류 설명, VARCHAR2(1000) */
	,EZC_CLASS_CD.USE_YN AS useYn	/* 사용 여부, CHAR(1) */
	,EZC_CLASS_CD.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
	,EZC_CLASS_CD.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
	,EZC_CLASS_CD.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
	,EZC_CLASS_CD.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
FROM
	EZC_CLASS_CD	/* 공통 분류 코드 */
WHERE 1=1
	AND EZC_CLASS_CD.CLASS_CD = #{classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
</select>

<select id="selectCountEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd" resultType="java.lang.Integer">
SELECT 
	COUNT(1)
FROM
	EZC_CLASS_CD	/* 공통 분류 코드 */
WHERE 1=1
	<if test="classCd != null and classCd != ''">
	AND EZC_CLASS_CD.CLASS_CD = #{classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
	</if>
	<if test="classDesc != null and classDesc != ''">
	AND EZC_CLASS_CD.CLASS_DESC LIKE '%' || #{classDesc, jdbcType=VARCHAR} || '%'	/* 분류 설명, VARCHAR2(1000) */
	</if>
</select>

<select id="selectListEzcClassCd" resultType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
SELECT * FROM (
	SELECT ROWNUM AS ROW__NUM, RECORDS.* FROM (
		/* #### SQL Body [[ ################# */
		SELECT
			 EZC_CLASS_CD.CLASS_CD AS classCd	/* 분류 코드, VARCHAR2(4) */
			,EZC_CLASS_CD.CLASS_NM AS classNm	/* 분류 명, VARCHAR2(50) */
			,EZC_CLASS_CD.CLASS_DESC AS classDesc	/* 분류 설명, VARCHAR2(1000) */
			,EZC_CLASS_CD.USE_YN AS useYn	/* 사용 여부, CHAR(1) */
			,EZC_CLASS_CD.REG_ID AS regId	/* 등록자 ID, VARCHAR2(20) */
			,EZC_CLASS_CD.REG_DT AS regDt	/* 등록 일시, VARCHAR2(14) */
			,EZC_CLASS_CD.MODI_ID AS modiId	/* 수정자 ID, VARCHAR2(20) */
			,EZC_CLASS_CD.MODI_DT AS modiDt	/* 수정 일시, VARCHAR2(14) */
		FROM
			EZC_CLASS_CD	/* 공통 분류 코드 */
		WHERE 1=1
			<if test="param.classCd != null and param.classCd != ''">
			AND EZC_CLASS_CD.CLASS_CD = #{param.classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
			</if>
			<if test="param.classDesc != null and param.classDesc != ''">
			AND EZC_CLASS_CD.CLASS_DESC LIKE '%' || #{param.classDesc, jdbcType=VARCHAR} || '%'	/* 분류 설명, VARCHAR2(1000) */
			</if>
		ORDER BY
			EZC_CLASS_CD.CLASS_CD DESC
		/* #### SQL Body ]] ################# */
	) RECORDS
	WHERE ROWNUM &lt;= ((#{param.pageNum, jdbcType=NUMERIC}*#{param.pageCount, jdbcType=NUMERIC})+1) 
)
WHERE ROW__NUM &gt; (#{param.pageNum, jdbcType=NUMERIC}-1)*#{param.pageCount, jdbcType=NUMERIC}
</select>

<update id="updateEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
UPDATE EZC_CLASS_CD SET	/* 공통 분류 코드 */
	 CLASS_NM = #{classNm, jdbcType=VARCHAR}	/* 분류 명, VARCHAR2(50) */
	,CLASS_DESC = #{classDesc, jdbcType=VARCHAR}	/* 분류 설명, VARCHAR2(1000) */
	,USE_YN = #{useYn, jdbcType=CHAR}	/* 사용 여부, CHAR(1) */
	,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
	,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
WHERE 1=1
	AND CLASS_CD = #{classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
</update>

<update id="mergeEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
MERGE INTO EZC_CLASS_CD /* 공통 분류 코드 */
	USING DUAL ON (
		CLASS_CD = #{classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
	)
	WHEN MATCHED THEN
		UPDATE SET
			 CLASS_NM = #{classNm, jdbcType=VARCHAR}	/* 분류 명, VARCHAR2(50) */
			,CLASS_DESC = #{classDesc, jdbcType=VARCHAR}	/* 분류 설명, VARCHAR2(1000) */
			,USE_YN = #{useYn, jdbcType=CHAR}	/* 사용 여부, CHAR(1) */
			,MODI_ID = #{modiId, jdbcType=VARCHAR}	/* 수정자 ID, VARCHAR2(20) */
			,MODI_DT = #{modiDt, jdbcType=VARCHAR}	/* 수정 일시, VARCHAR2(14) */
	WHEN NOT MATCHED THEN
		INSERT (
			 CLASS_CD	/* 분류 코드, VARCHAR2(4) */
			,CLASS_NM	/* 분류 명, VARCHAR2(50) */
			,CLASS_DESC	/* 분류 설명, VARCHAR2(1000) */
			,USE_YN	/* 사용 여부, CHAR(1) */
			,REG_ID	/* 등록자 ID, VARCHAR2(20) */
			,REG_DT	/* 등록 일시, VARCHAR2(14) */
		) VALUES (
			 #{classCd, jdbcType=VARCHAR}
			,#{classNm, jdbcType=VARCHAR}
			,#{classDesc, jdbcType=VARCHAR}
			,#{useYn, jdbcType=CHAR}
			,#{regId, jdbcType=VARCHAR}
			,#{regDt, jdbcType=VARCHAR}
		)
</update>

<delete id="deleteEzcClassCd" parameterType="com.ezwel.htl.interfaces.server.entities.EzcClassCd">
DELETE FROM EZC_CLASS_CD /* 공통 분류 코드 */
WHERE 1=1
	AND CLASS_CD = #{classCd, jdbcType=VARCHAR}	/* 분류 코드, VARCHAR2(4) */
</delete>


</mapper>
