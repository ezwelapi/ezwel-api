<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       	http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       	http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-3.2.xsd
       	http://www.springframework.org/schema/util
       	http://www.springframework.org/schema/util/spring-util-3.2.xsd
       	http://www.directwebremoting.org/schema/spring-dwr
       	http://www.directwebremoting.org/schema/spring-dwr/spring-dwr-3.0.xsd
       	http://www.springframework.org/schema/tx 
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	http://www.springframework.org/schema/task
       	http://www.springframework.org/schema/task/spring-task-3.2.xsd
       	http://www.springframework.org/schema/aop 
       	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	">
       
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Handles HTTP GET requests for /ui/** by efficiently serving up static resources in the ${webappRoot}/resources directory <resources mapping="/ui/**" location="/ui/" /> -->
	<!-- 
		WAS's default servlet name
		Tomcat : default
		Resin : resin-file
		Weblogic :  FileServlet
		WebSphere : SimpleFileServlet
		jetty : default
		jboss : default
		jeus : WorkerServlet	<default-servlet-handler default-servlet-name="WorkerServlet"/>
	-->	
	
	<!-- JEUS DefaultServlet -->
	<!-- <default-servlet-handler default-servlet-name="WorkerServlet"/> -->

	<!-- 로컬 톰켓 -->
	<default-servlet-handler />
	
	<!-- ##################### ApplicationContextAware SETUP ###################### -->

	<beans:bean id="springApplicationContext" class="com.ezwel.htl.interfaces.server.commons.spring.LApplicationContext" />
		
	<!-- ##################### JSP VIEW RESOLVER ###################### -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
		
	<!-- ##################### SPRING CONTEXT SETUP ###################### -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<tx:annotation-driven />
	
	<context:annotation-config />
		
	<!-- ##################### SPRING ANNOTATION SCAN SETUP ###################### -->
	<!-- 
	Scan only files deployed in .class: *
	If you are scanning a file in a JAR file deployed as a .jar you MUST specify the package EX) "com.universal"
	-->
	<context:component-scan base-package="com.ezwel.htl.interfaces" annotation-config="true">
		<!-- <context:include-filter type="regex" expression="(service|controller|repository)\*" /> -->
		<!-- <context:exclude-filter type="regex" expression="com\.ezwel\.htl\.interfaces\.commons\.annotation\.*" /> -->
	</context:component-scan>	
	
	<!-- ##################### INIT INTERFACE SETUP ###################### -->
	<beans:bean id="interfaceFactory" class="com.ezwel.htl.interfaces.commons.configure.InterfaceFactory" init-method="initFactory" destroy-method="destroyFactory">
		<!-- config file path -->
		<beans:property name="configXmlPath" value="/interfaces/interface-configure.xml" />
	</beans:bean>
	
	<!-- ##################### SPRING DEFAULT HANDLER SETUP ###################### -->
	
	<beans:bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<beans:property name="order" value="1" />
	</beans:bean>	
	
	<!-- Controller for Homepage -->
	<!-- <view-controller path="/" view-name="index" /> -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
		
	<!-- not used -->
	<!-- 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="order" value="3" />
	</bean>	
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="order" value="4" /> 
	</bean>
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
		<property name="order" value="5" />
	</bean>
	-->

	<!-- ##################### INTERCEPTORS SETUP ###################### -->	
	<interceptors>
	    <interceptor> 
	   	   <!-- <mapping path="/process/**/*"/> -->
	   	   <!-- <mapping path="/process/**"/> -->
	   	   <mapping path="/**"/>
	       <beans:bean class="com.ezwel.htl.interfaces.server.commons.intercepter.HandlerInterceptor"/>
	    </interceptor>
	</interceptors>
	
	<!-- ##################### TASK SCHEDULER SETUP ###################### -->
	
	<beans:bean id="taskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
    	<beans:property name="poolSize" value="10"/>
	</beans:bean>
	
	<!-- scheduling task -->
	<task:scheduler id="taskScheduler" pool-size="10"/>
	
	<task:annotation-driven scheduler="taskScheduler"/>

	<!-- 
	<interceptors>
		<interceptor>
	   	   <mapping path="/ezwel_if_server/**"/>
	       <beans:bean class="com.ezwel.htl.interfaces.commons.intercepter.HandlerInterceptor"/>	
		</interceptor>
	      추가로 여러개의 인터셉터 설정 가능 
	    <interceptor> 
	   	   <mapping path="/ezwel_if_server/inside/**"/>
	       <bean class="com.universal.system.beans.interceptor.AdminInterCeptor"/>
	    </interceptor>
	</interceptors>
	-->
	<!-- ##################### MULTIPART RESOLVER SETUP ###################### -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="1073741824" /> <!-- 1073741824 Byte == 1 GB 2016-01-17 -->
		<beans:property name="uploadTempDir" value="/temp" />
	</beans:bean>

		
	<!-- ##################### AOP SETUP ###################### -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- MethodsInterceptor -->
	<beans:bean id="methodsAdvice" class="com.ezwel.htl.interfaces.server.commons.aop.MethodsAdvice">
		<beans:property name="order" value="2"/>
	</beans:bean> 
	
	<aop:config>
		<!-- execution expression -->  <!-- and @annotation(remoteMethod) --> 
		<aop:pointcut id="targetMethod" expression="execution(* com.ezwel.htl.interfaces..*.*(..))"/>
		 <!-- org.apache.ibatis.session -->
		<!-- Before advice -->
		<aop:aspect ref="methodsAdvice">
			<aop:before pointcut-ref="targetMethod" method="beforeTargetMethod" />
		</aop:aspect>
		
		<!-- After returning advice -->
		<aop:aspect ref="methodsAdvice">
		    <aop:after-returning pointcut-ref="targetMethod" method="afterReturningTargetMethod" returning="retVal" />
		</aop:aspect>
			
		<!-- After throwing advice --> 
		<aop:aspect ref="methodsAdvice">
			<aop:after-throwing pointcut-ref="targetMethod" method="afterThrowingTargetMethod" throwing="exception" />
		</aop:aspect> 
			
		<!-- After (finally) advice -->
		<aop:aspect ref="methodsAdvice">
			<aop:after pointcut-ref="targetMethod" method="afterTargetMethod" />
		</aop:aspect>
		
		<!-- Around advice -->
		<aop:aspect ref="methodsAdvice">
			<aop:around pointcut-ref="targetMethod" method="aroundTargetMethod"/>
		</aop:aspect>
	</aop:config>


	
</beans:beans>
